"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6903],{4505:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var i=a(4848),t=a(8453),s=a(4235),r=a(8328);a(3078);const l={id:"intro",title:"Installation"},o=void 0,c={id:"intro",title:"Installation",description:"Introduction",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/java/docs/next/intro",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"intro",title:"Installation"},sidebar:"docs",next:{title:"Writing tests",permalink:"/java/docs/next/writing-tests"}},d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Usage",id:"usage",level:2},{value:"First script",id:"first-script",level:2},{value:"Running the Example script",id:"running-the-example-script",level:2},{value:"System requirements",id:"system-requirements",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"Playwright was created specifically to accommodate the needs of end-to-end testing. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox. Test on Windows, Linux, and macOS, locally or on CI, headless or headed with native mobile emulation."}),"\n",(0,i.jsxs)(n.p,{children:["Playwright is distributed as a set of ",(0,i.jsx)(n.a,{href:"https://maven.apache.org/what-is-maven.html",children:"Maven"})," modules. The easiest way to use it is to add one dependency to your project's ",(0,i.jsx)(n.code,{children:"pom.xml"})," as described below. If you're not familiar with Maven please refer to its ",(0,i.jsx)(n.a,{href:"https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html",children:"documentation"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"Get started by installing Playwright and running the example file to see it in action."}),"\n",(0,i.jsxs)(s.A,{defaultValue:"java",values:[{label:"App.java",value:"java"},{label:"pom.xml",value:"pom"}],children:[(0,i.jsx)(r.A,{value:"java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:'title="src/main/java/org/example/App.java"',children:'package org.example;\n\nimport com.microsoft.playwright.*;\n\npublic class App {\n    public static void main(String[] args) {\n        try (Playwright playwright = Playwright.create()) {\n            Browser browser = playwright.chromium().launch();\n            Page page = browser.newPage();\n            page.navigate("http://playwright.dev");\n            System.out.println(page.title());\n        }\n    }\n}\n'})})}),(0,i.jsx)(r.A,{value:"pom",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>org.example</groupId>\n  <artifactId>examples</artifactId>\n  <version>0.1-SNAPSHOT</version>\n  <name>Playwright Client Examples</name>\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <dependencies>\n    <dependency>\n      <groupId>com.microsoft.playwright</groupId>\n      <artifactId>playwright</artifactId>\n      <version>1.46.0</version>\n    </dependency>\n  </dependencies>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.10.1</version>\n        \x3c!-- References to interface static methods are allowed only at source level 1.8 or above --\x3e\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n'})})})]}),"\n",(0,i.jsx)(n.p,{children:"With the Example.java and pom.xml above, compile and execute your new program as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'mvn compile exec:java -D exec.mainClass="org.example.App"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Running it downloads the Playwright package and installs browser binaries for Chromium, Firefox and WebKit. To modify this behavior see ",(0,i.jsx)(n.a,{href:"/java/docs/next/browsers#install-browsers",children:"installation parameters"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"first-script",children:"First script"}),"\n",(0,i.jsxs)(n.p,{children:["In our first script, we will navigate to ",(0,i.jsx)(n.code,{children:"playwright.dev"})," and take a screenshot in WebKit."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.example;\n\nimport com.microsoft.playwright.*;\nimport java.nio.file.Paths;\n\npublic class App {\n  public static void main(String[] args) {\n    try (Playwright playwright = Playwright.create()) {\n      Browser browser = playwright.webkit().launch();\n      Page page = browser.newPage();\n      page.navigate("https://playwright.dev/");\n      page.screenshot(new Page.ScreenshotOptions().setPath(Paths.get("example.png")));\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["By default, Playwright runs the browsers in headless mode. To see the browser UI, pass the ",(0,i.jsx)(n.code,{children:"setHeadless(false)"})," flag while launching the browser. You can also use ",(0,i.jsx)(n.code,{children:"slowMo"})," to slow down execution. Learn more in the debugging tools ",(0,i.jsx)(n.a,{href:"/java/docs/next/debug",children:"section"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"playwright.firefox().launch(new BrowserType.LaunchOptions().setHeadless(false).setSlowMo(50));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-the-example-script",children:"Running the Example script"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'mvn compile exec:java -D exec.mainClass="org.example.App"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["By default browsers launched with Playwright run headless, meaning no browser UI will open up when running the script. To change that you can pass ",(0,i.jsx)(n.code,{children:"new BrowserType.LaunchOptions().setHeadless(false)"})," when launching the browser."]}),"\n",(0,i.jsx)(n.h2,{id:"system-requirements",children:"System requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Java 8 or higher."}),"\n",(0,i.jsx)(n.li,{children:"Windows 10+, Windows Server 2016+ or Windows Subsystem for Linux (WSL)."}),"\n",(0,i.jsx)(n.li,{children:"macOS 13 Ventura, or macOS 14 Sonoma."}),"\n",(0,i.jsx)(n.li,{children:"Debian 11, Debian 12, Ubuntu 20.04 or Ubuntu 22.04, Ubuntu 24.04, on x86-64 and arm64 architecture."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"whats-next",children:"What's next"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/java/docs/next/writing-tests",children:"Write tests using web first assertions, page fixtures and locators"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/java/docs/next/running-tests",children:"Run single test, multiple tests, headed mode"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/java/docs/next/codegen",children:"Generate tests with Codegen"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/java/docs/next/trace-viewer-intro",children:"See a trace of your tests"})}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);
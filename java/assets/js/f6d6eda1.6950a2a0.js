"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[8836],{7544:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>r});var a=n(4848),t=n(8453);n(4235),n(8328),n(3078);const d={id:"downloads",title:"Downloads"},i=void 0,s={id:"downloads",title:"Downloads",description:"Introduction",source:"@site/docs/downloads.mdx",sourceDirName:".",slug:"/downloads",permalink:"/java/docs/next/downloads",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"downloads",title:"Downloads"},sidebar:"docs",previous:{title:"Debugging Tests",permalink:"/java/docs/next/debug"},next:{title:"Emulation",permalink:"/java/docs/next/emulation"}},l={},r=[{value:"Introduction",id:"introduction",level:2},{value:"Variations",id:"variations",level:4}];function c(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(o.p,{children:["For every attachment downloaded by the page, ",(0,a.jsx)(o.a,{href:"/java/docs/next/api/class-page#page-event-download",children:"Page.onDownload(handler)"})," event is emitted. All these attachments are downloaded into a temporary folder. You can obtain the download url, file name and payload stream using the ",(0,a.jsx)(o.a,{href:"/java/docs/next/api/class-download",title:"Download",children:"Download"})," object from the event."]}),"\n",(0,a.jsxs)(o.p,{children:["You can specify where to persist downloaded files using the ",(0,a.jsx)(o.code,{children:"downloadsPath"})," option in ",(0,a.jsx)(o.a,{href:"/java/docs/next/api/class-browsertype#browser-type-launch",children:"BrowserType.launch()"}),"."]}),"\n",(0,a.jsx)(o.admonition,{type:"note",children:(0,a.jsx)(o.p,{children:"Downloaded files are deleted when the browser context that produced them is closed."})}),"\n",(0,a.jsx)(o.p,{children:"Here is the simplest way to handle the file download:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-java",children:'// Wait for the download to start\nDownload download = page.waitForDownload(() -> {\n    // Perform the action that initiates download\n    page.getByText("Download file").click();\n});\n\n// Wait for the download process to complete and save the downloaded file somewhere\ndownload.saveAs(Paths.get("/path/to/save/at/", download.suggestedFilename()));\n'})}),"\n",(0,a.jsx)(o.h4,{id:"variations",children:"Variations"}),"\n",(0,a.jsx)(o.p,{children:"If you have no idea what initiates the download, you can still handle the event:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-java",children:"page.onDownload(download -> System.out.println(download.path()));\n"})}),"\n",(0,a.jsx)(o.p,{children:"Note that handling the event forks the control flow and makes the script harder to follow. Your scenario might end while you are downloading a file since your main control flow is not awaiting for this operation to resolve."}),"\n",(0,a.jsx)(o.admonition,{type:"note",children:(0,a.jsxs)(o.p,{children:["For uploading files, see the ",(0,a.jsx)(o.a,{href:"/java/docs/next/input#upload-files",children:"uploading files"})," section."]})})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);
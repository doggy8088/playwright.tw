"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[4518],{9606:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var n=t(4848),r=t(8453),l=t(4235),i=t(8328);t(3078);const a={id:"running-tests",title:"Running and debugging tests"},o=void 0,d={id:"running-tests",title:"Running and debugging tests",description:"Introduction",source:"@site/docs/running-tests.mdx",sourceDirName:".",slug:"/running-tests",permalink:"/dotnet/docs/next/running-tests",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"running-tests",title:"Running and debugging tests"},sidebar:"docs",previous:{title:"Generating tests",permalink:"/dotnet/docs/next/codegen-intro"},next:{title:"Trace viewer",permalink:"/dotnet/docs/next/trace-viewer-intro"}},h={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Running tests",id:"running-tests",level:2},{value:"Run all tests",id:"run-all-tests",level:3},{value:"Run tests in headed mode",id:"run-tests-in-headed-mode",level:3},{value:"Run tests on different browsers: Browser env",id:"run-tests-on-different-browsers-browser-env",level:3},{value:"Run tests on different browsers: launch configuration",id:"run-tests-on-different-browsers-launch-configuration",level:3},{value:"Run specific tests",id:"run-specific-tests",level:3},{value:"Run tests with multiple workers:",id:"run-tests-with-multiple-workers",level:3},{value:"Debugging Tests",id:"debugging-tests",level:2},{value:"What&#39;s Next",id:"whats-next",level:2}];function u(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(s.p,{children:["You can run a single test, a set of tests or all tests. Tests can be run on different browsers. By default, tests are run in a headless manner, meaning no browser window will be opened while running the tests and results will be seen in the terminal. If you prefer, you can run your tests in headed mode by using the ",(0,n.jsx)(s.code,{children:"headless"})," test run parameter."]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"You will learn"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#running-tests",children:"How to run tests"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#debugging-tests",children:"How to debug tests"})}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"running-tests",children:"Running tests"}),"\n",(0,n.jsx)(s.h3,{id:"run-all-tests",children:"Run all tests"}),"\n",(0,n.jsx)(s.p,{children:"Use the following command to run all tests."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dotnet test\n"})}),"\n",(0,n.jsx)(s.h3,{id:"run-tests-in-headed-mode",children:"Run tests in headed mode"}),"\n",(0,n.jsx)(s.p,{children:"Use the following command to run your tests in headed mode opening a browser window for each test."}),"\n",(0,n.jsxs)(l.A,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],children:[(0,n.jsx)(i.A,{value:"bash",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"HEADED=1 dotnet test\n"})})}),(0,n.jsx)(i.A,{value:"powershell",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:'$env:HEADED="1"\ndotnet test\n'})})}),(0,n.jsx)(i.A,{value:"batch",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-batch",children:"set HEADED=1\ndotnet test\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"run-tests-on-different-browsers-browser-env",children:"Run tests on different browsers: Browser env"}),"\n",(0,n.jsxs)(s.p,{children:["Specify which browser you would like to run your tests on via the ",(0,n.jsx)(s.code,{children:"BROWSER"})," environment variable."]}),"\n",(0,n.jsxs)(l.A,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],children:[(0,n.jsx)(i.A,{value:"bash",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"BROWSER=webkit dotnet test\n"})})}),(0,n.jsx)(i.A,{value:"powershell",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:'$env:BROWSER="webkit"\ndotnet test\n'})})}),(0,n.jsx)(i.A,{value:"batch",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-batch",children:"set BROWSER=webkit\ndotnet test\n"})})})]}),"\n",(0,n.jsx)(s.h3,{id:"run-tests-on-different-browsers-launch-configuration",children:"Run tests on different browsers: launch configuration"}),"\n",(0,n.jsx)(s.p,{children:"Specify which browser you would like to run your tests on by adjusting the launch configuration options:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dotnet test -- Playwright.BrowserName=webkit\n"})}),"\n",(0,n.jsxs)(s.p,{children:["To run your test on multiple browsers or configurations, you need to invoke the ",(0,n.jsx)(s.code,{children:"dotnet test"})," command multiple times. There you can then either specify the ",(0,n.jsx)(s.code,{children:"BROWSER"})," environment variable or set the ",(0,n.jsx)(s.code,{children:"Playwright.BrowserName"})," via the runsettings file:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dotnet test --settings:chromium.runsettings\ndotnet test --settings:firefox.runsettings\ndotnet test --settings:webkit.runsettings\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n  <RunSettings>\n    <Playwright>\n      <BrowserName>chromium</BrowserName>\n    </Playwright>\n  </RunSettings>\n'})}),"\n",(0,n.jsxs)(s.p,{children:["For more information see ",(0,n.jsx)(s.a,{href:"https://docs.microsoft.com/en-us/dotnet/core/testing/selective-unit-tests?pivots=mstest",children:"selective unit tests"})," in the Microsoft docs."]}),"\n",(0,n.jsx)(s.h3,{id:"run-specific-tests",children:"Run specific tests"}),"\n",(0,n.jsx)(s.p,{children:"To run a single test file, use the filter flag followed by the class name of the test you want to run."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'dotnet test --filter "ExampleTest"\n'})}),"\n",(0,n.jsx)(s.p,{children:"To run a set of test files, use the filter flag followed by the class names of the tests you want to run."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'dotnet test --filter "ExampleTest1|ExampleTest2"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["To run a test with a specific title use the filter flag followed by ",(0,n.jsx)(s.em,{children:"Name~"})," and the title of the test."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'dotnet test --filter "Name~GetStartedLink"\n'})}),"\n",(0,n.jsx)(s.h3,{id:"run-tests-with-multiple-workers",children:"Run tests with multiple workers:"}),"\n",(0,n.jsxs)(l.A,{groupId:"test-runners",defaultValue:"mstest",values:[{label:"MSTest",value:"mstest"},{label:"NUnit",value:"nunit"}],children:[(0,n.jsx)(i.A,{value:"nunit",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dotnet test -- NUnit.NumberOfTestWorkers=5\n"})})}),(0,n.jsx)(i.A,{value:"mstest",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dotnet test -- MSTest.Parallelize.Workers=5\n"})})})]}),"\n",(0,n.jsx)(s.h2,{id:"debugging-tests",children:"Debugging Tests"}),"\n",(0,n.jsxs)(s.p,{children:["Since Playwright runs in .NET, you can debug it with your debugger of choice in e.g. Visual Studio Code or Visual Studio. Playwright comes with the Playwright Inspector which allows you to step through Playwright API calls, see their debug logs and explore ",(0,n.jsx)(s.a,{href:"/dotnet/docs/next/locators",children:"locators"}),"."]}),"\n",(0,n.jsxs)(l.A,{groupId:"bash-flavor",defaultValue:"bash",values:[{label:"Bash",value:"bash"},{label:"PowerShell",value:"powershell"},{label:"Batch",value:"batch"}],children:[(0,n.jsx)(i.A,{value:"bash",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"PWDEBUG=1 dotnet test\n"})})}),(0,n.jsx)(i.A,{value:"powershell",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-powershell",children:"$env:PWDEBUG=1\ndotnet test\n"})})}),(0,n.jsx)(i.A,{value:"batch",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-batch",children:"set PWDEBUG=1\ndotnet test\n"})})})]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://github.com/microsoft/playwright/assets/13063165/a1e758d3-d379-414f-be0b-7339f12bb635",alt:"debugging tests with playwright inspector"})}),"\n",(0,n.jsxs)(s.p,{children:["Check out our ",(0,n.jsx)(s.a,{href:"/dotnet/docs/next/debug",children:"debugging guide"})," to learn more about the ",(0,n.jsx)(s.a,{href:"/dotnet/docs/next/debug#playwright-inspector",children:"Playwright Inspector"})," as well as debugging with ",(0,n.jsx)(s.a,{href:"/dotnet/docs/next/debug#browser-developer-tools",children:"Browser Developer tools"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"whats-next",children:"What's Next"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/dotnet/docs/next/codegen-intro",children:"Generate tests with Codegen"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/dotnet/docs/next/trace-viewer-intro",children:"See a trace of your tests"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/dotnet/docs/next/ci-intro",children:"Run tests on CI"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/dotnet/docs/next/test-runners",children:"Learn more about the MSTest and NUnit base classes"})}),"\n"]})]})}function g(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);
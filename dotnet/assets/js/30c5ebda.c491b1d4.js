"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[5542],{6527:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var i=o(4848),s=o(8453);o(4235),o(8328),o(3078);const n={id:"videos",title:"Videos"},r=void 0,d={id:"videos",title:"Videos",description:"Introduction",source:"@site/docs/videos.mdx",sourceDirName:".",slug:"/videos",permalink:"/dotnet/docs/next/videos",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"videos",title:"Videos"},sidebar:"docs",previous:{title:"Trace viewer",permalink:"/dotnet/docs/next/trace-viewer"},next:{title:"WebView2",permalink:"/dotnet/docs/next/webview2"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Record video",id:"record-video",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"With Playwright you can record videos for your tests."}),"\n",(0,i.jsx)(t.h2,{id:"record-video",children:"Record video"}),"\n",(0,i.jsxs)(t.p,{children:["Videos are saved upon ",(0,i.jsx)(t.a,{href:"/dotnet/docs/next/browser-contexts",children:"browser context"})," closure at the end of a test. If you create a browser context manually, make sure to await ",(0,i.jsx)(t.a,{href:"/dotnet/docs/next/api/class-browsercontext#browser-context-close",children:"BrowserContext.CloseAsync()"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'var context = await browser.NewContextAsync(new()\n{\n    RecordVideoDir = "videos/"\n});\n// Make sure to close, so that videos are saved.\nawait context.CloseAsync();\n'})}),"\n",(0,i.jsx)(t.p,{children:"You can also specify video size. The video size defaults to the viewport size scaled down to fit 800x800. The video of the viewport is placed in the top-left corner of the output video, scaled down to fit if necessary. You may need to set the viewport size to match your desired video size."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'var context = await browser.NewContextAsync(new()\n{\n    RecordVideoDir = "videos/",\n    RecordVideoSize = new RecordVideoSize() { Width = 640, Height = 480 }\n});\n// Make sure to close, so that videos are saved.\nawait context.CloseAsync();\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Saved video files will appear in the specified folder. They all have generated unique names. For the multi-page scenarios, you can access the video file associated with the page via the ",(0,i.jsx)(t.a,{href:"/dotnet/docs/next/api/class-page#page-video",children:"Page.Video"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:"var path = await page.Video.PathAsync();\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Note that the video is only available after the page or browser context is closed."})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);
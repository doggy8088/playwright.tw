"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[9673],{5558:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var t=s(4848),i=s(8453);s(4235),s(8328),s(3078);const r={id:"class-route",title:"Route"},o=void 0,l={id:"api/class-route",title:"Route",description:"Whenever a network route is set up with Page.RouteAsync() or BrowserContext.RouteAsync(), the Route object allows to handle the route.",source:"@site/docs/api/class-route.mdx",sourceDirName:"api",slug:"/api/class-route",permalink:"/dotnet/docs/next/api/class-route",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"class-route",title:"Route"},sidebar:"api",previous:{title:"Response",permalink:"/dotnet/docs/next/api/class-response"},next:{title:"Selectors",permalink:"/dotnet/docs/next/api/class-selectors"}},c={},d=[{value:"Methods",id:"methods",level:2},{value:"AbortAsync",id:"route-abort",level:3},{value:"ContinueAsync",id:"route-continue",level:3},{value:"FallbackAsync",id:"route-fallback",level:3},{value:"FetchAsync",id:"route-fetch",level:3},{value:"FulfillAsync",id:"route-fulfill",level:3},{value:"Request",id:"route-request",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Whenever a network route is set up with ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-page#page-route",children:"Page.RouteAsync()"})," or ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-browsercontext#browser-context-route",children:"BrowserContext.RouteAsync()"}),", the ",(0,t.jsx)(n.code,{children:"Route"})," object allows to handle the route."]}),"\n",(0,t.jsxs)(n.p,{children:["Learn more about ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/network",children:"networking"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"route-abort",children:"AbortAsync"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added before v1.9"}),"\n",(0,t.jsx)("x-search",{children:"route.AbortAsync"}),"\n",(0,t.jsx)(n.p,{children:"Aborts the route's request."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"await Route.AbortAsync(errorCode);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"errorCode"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-abort-option-error-code"}),(0,t.jsx)("a",{href:"#route-abort-option-error-code",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Optional error code. Defaults to ",(0,t.jsx)(n.code,{children:"failed"}),", could be one of the following:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'aborted'"})," - An operation was aborted (due to user action)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'accessdenied'"})," - Permission to access a resource, other than the network, was denied"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'addressunreachable'"})," - The IP address is unreachable. This usually means that there is no route to the specified host or network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'blockedbyclient'"})," - The client chose to block the request."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'blockedbyresponse'"})," - The request failed because the response was delivered along with requirements which are not met ('X-Frame-Options' and 'Content-Security-Policy' ancestor checks, for instance)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'connectionaborted'"})," - A connection timed out as a result of not receiving an ACK for data sent."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'connectionclosed'"})," - A connection was closed (corresponding to a TCP FIN)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'connectionfailed'"})," - A connection attempt failed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'connectionrefused'"})," - A connection attempt was refused."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'connectionreset'"})," - A connection was reset (corresponding to a TCP RST)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'internetdisconnected'"})," - The Internet connection has been lost."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'namenotresolved'"})," - The host name could not be resolved."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'timedout'"})," - An operation timed out."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'failed'"})," - A generic failure occurred."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void",title:"void",children:"void"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-abort-return"}),(0,t.jsx)("a",{href:"#route-abort-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"route-continue",children:"ContinueAsync"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added before v1.9"}),"\n",(0,t.jsx)("x-search",{children:"route.ContinueAsync"}),"\n",(0,t.jsx)(n.p,{children:"Sends route's request to the network with optional overrides."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("**/*", async route =>\n{\n    var headers = new Dictionary<string, string>(route.Request.Headers) { { "foo", "bar" } };\n    headers.Remove("origin");\n    await route.ContinueAsync(new() { Headers = headers });\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.code,{children:"RouteContinueOptions?"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Headers"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.idictionary",title:"IDictionary",children:"IDictionary"}),"?<",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),", ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"> ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-continue-option-headers"}),(0,t.jsx)("a",{href:"#route-continue-option-headers",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request HTTP headers. Header values will be converted to a string."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Method"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-continue-option-method"}),(0,t.jsx)("a",{href:"#route-continue-option-method",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request method (e.g. GET or POST)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PostData"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.byte",title:"byte",children:"byte"}),"[]? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-continue-option-post-data"}),(0,t.jsx)("a",{href:"#route-continue-option-post-data",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the post data of request."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Url"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-continue-option-url"}),(0,t.jsx)("a",{href:"#route-continue-option-url",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request URL. New URL must have same protocol as original one."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void",title:"void",children:"void"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-continue-return"}),(0,t.jsx)("a",{href:"#route-continue-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Details"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that any overrides such as ",(0,t.jsx)(n.code,{children:"url"})," or ",(0,t.jsx)(n.code,{children:"headers"})," only apply to the request being routed. If this request results in a redirect, overrides will not be applied to the new redirected request. If you want to propagate a header through redirects, use the combination of ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-fetch",children:"Route.FetchAsync()"})," and ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-fulfill",children:"Route.FulfillAsync()"})," instead."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-continue",children:"Route.ContinueAsync()"})," will immediately send the request to the network, other matching handlers won't be invoked. Use ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-fallback",children:"Route.FallbackAsync()"})," If you want next matching handler in the chain to be invoked."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"route-fallback",children:"FallbackAsync"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added in: v1.23"}),"\n",(0,t.jsx)("x-search",{children:"route.FallbackAsync"}),"\n",(0,t.jsxs)(n.p,{children:["Continues route's request with optional overrides. The method is similar to ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-continue",children:"Route.ContinueAsync()"})," with the difference that other matching handlers will be invoked before sending the request."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.p,{children:"When several routes match the given pattern, they run in the order opposite to their registration. That way the last registered route can always override all the previous ones. In the example below, request will be handled by the bottom-most handler first, then it'll fall back to the previous one and in the end will be aborted by the first registered route."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("**/*", route => {\n    // Runs last.\n    await route.AbortAsync();\n});\n\nawait page.RouteAsync("**/*", route => {\n    // Runs second.\n    await route.FallbackAsync();\n});\n\nawait page.RouteAsync("**/*", route => {\n    // Runs first.\n    await route.FallbackAsync();\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"Registering multiple routes is useful when you want separate handlers to handle different kinds of requests, for example API calls vs page resources or GET requests vs POST requests as in the example below."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'// Handle GET requests.\nawait page.RouteAsync("**/*", route => {\n    if (route.Request.Method != "GET") {\n        await route.FallbackAsync();\n        return;\n    }\n    // Handling GET only.\n    // ...\n});\n\n// Handle POST requests.\nawait page.RouteAsync("**/*", route => {\n    if (route.Request.Method != "POST") {\n        await route.FallbackAsync();\n        return;\n    }\n    // Handling POST only.\n    // ...\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"One can also modify request while falling back to the subsequent handler, that way intermediate route handler can modify url, method, headers and postData of the request."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("**/*", async route =>\n{\n    var headers = new Dictionary<string, string>(route.Request.Headers) { { "foo", "foo-value" } };\n    headers.Remove("bar");\n    await route.FallbackAsync(new() { Headers = headers });\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-continue",children:"Route.ContinueAsync()"})," to immediately send the request to the network, other matching handlers won't be invoked in that case."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.code,{children:"RouteFallbackOptions?"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Headers"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.idictionary",title:"IDictionary",children:"IDictionary"}),"?<",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),", ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"> ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fallback-option-headers"}),(0,t.jsx)("a",{href:"#route-fallback-option-headers",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request HTTP headers. Header values will be converted to a string."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Method"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fallback-option-method"}),(0,t.jsx)("a",{href:"#route-fallback-option-method",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request method (e.g. GET or POST)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PostData"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.byte",title:"byte",children:"byte"}),"[]? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fallback-option-post-data"}),(0,t.jsx)("a",{href:"#route-fallback-option-post-data",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the post data of request."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Url"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fallback-option-url"}),(0,t.jsx)("a",{href:"#route-fallback-option-url",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request URL. New URL must have same protocol as original one. Changing the URL won't affect the route matching, all the routes are matched using the original request URL."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void",title:"void",children:"void"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fallback-return"}),(0,t.jsx)("a",{href:"#route-fallback-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"route-fetch",children:"FetchAsync"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added in: v1.29"}),"\n",(0,t.jsx)("x-search",{children:"route.FetchAsync"}),"\n",(0,t.jsx)(n.p,{children:"Performs the request and fetches result without fulfilling it, so that the response could be modified and then fulfilled."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("https://dog.ceo/api/breeds/list/all", async route =>\n{\n    var response = await route.FetchAsync();\n    dynamic json = await response.JsonAsync();\n    json.message.big_red_dog = new string[] {};\n    await route.FulfillAsync(new() { Response = response, Json = json });\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.code,{children:"RouteFetchOptions?"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Headers"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.idictionary",title:"IDictionary",children:"IDictionary"}),"?<",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),", ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"> ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-headers"}),(0,t.jsx)("a",{href:"#route-fetch-option-headers",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request HTTP headers. Header values will be converted to a string."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MaxRedirects"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",title:"int",children:"int"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.31"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-max-redirects"}),(0,t.jsx)("a",{href:"#route-fetch-option-max-redirects",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maximum number of request redirects that will be followed automatically. An error will be thrown if the number is exceeded. Defaults to ",(0,t.jsx)(n.code,{children:"20"}),". Pass ",(0,t.jsx)(n.code,{children:"0"})," to not follow redirects."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MaxRetries"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",title:"int",children:"int"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.46"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-max-retries"}),(0,t.jsx)("a",{href:"#route-fetch-option-max-retries",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Maximum number of times network errors should be retried. Currently only ",(0,t.jsx)(n.code,{children:"ECONNRESET"})," error is retried. Does not retry based on HTTP response codes. An error will be thrown if the limit is exceeded. Defaults to ",(0,t.jsx)(n.code,{children:"0"})," - no retries."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Method"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-method"}),(0,t.jsx)("a",{href:"#route-fetch-option-method",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request method (e.g. GET or POST)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PostData"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.byte",title:"byte",children:"byte"}),"[]? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-post-data"}),(0,t.jsx)("a",{href:"#route-fetch-option-post-data",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the post data of request."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Timeout"})," [float]? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.33"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-timeout"}),(0,t.jsx)("a",{href:"#route-fetch-option-timeout",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Request timeout in milliseconds. Defaults to ",(0,t.jsx)(n.code,{children:"30000"})," (30 seconds). Pass ",(0,t.jsx)(n.code,{children:"0"})," to disable timeout."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Url"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-option-url"}),(0,t.jsx)("a",{href:"#route-fetch-option-url",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"If set changes the request URL. New URL must have same protocol as original one."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-apiresponse",title:"APIResponse",children:"APIResponse"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fetch-return"}),(0,t.jsx)("a",{href:"#route-fetch-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Details"})}),"\n",(0,t.jsxs)(n.p,{children:["Note that ",(0,t.jsx)(n.code,{children:"headers"})," option will apply to the fetched request as well as any redirects initiated by it. If you want to only apply ",(0,t.jsx)(n.code,{children:"headers"})," to the original request, but not to redirects, look into ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-route#route-continue",children:"Route.ContinueAsync()"})," instead."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"route-fulfill",children:"FulfillAsync"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added before v1.9"}),"\n",(0,t.jsx)("x-search",{children:"route.FulfillAsync"}),"\n",(0,t.jsx)(n.p,{children:"Fulfills route's request with given response."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.p,{children:"An example of fulfilling all requests with 404 responses:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("**/*", route => route.FulfillAsync(new ()\n{\n    Status = 404,\n    ContentType = "text/plain",\n    Body = "Not Found!"\n}));\n'})}),"\n",(0,t.jsx)(n.p,{children:"An example of serving static file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'await page.RouteAsync("**/xhr_endpoint", route => route.FulfillAsync(new() { Path = "mock_data.json" }));\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.code,{children:"RouteFulfillOptions?"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Body"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-body"}),(0,t.jsx)("a",{href:"#route-fulfill-option-body",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Optional response body as text."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"BodyBytes"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.byte",title:"byte",children:"byte"}),"[]? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.9"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-body-bytes"}),(0,t.jsx)("a",{href:"#route-fulfill-option-body-bytes",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Optional response body as raw bytes."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ContentType"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-content-type"}),(0,t.jsx)("a",{href:"#route-fulfill-option-content-type",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["If set, equals to setting ",(0,t.jsx)(n.code,{children:"Content-Type"})," response header."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Headers"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.idictionary",title:"IDictionary",children:"IDictionary"}),"?<",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),", ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"> ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-headers"}),(0,t.jsx)("a",{href:"#route-fulfill-option-headers",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Response headers. Header values will be converted to a string."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Json"})," [object]? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.29"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-json"}),(0,t.jsx)("a",{href:"#route-fulfill-option-json",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["JSON response. This method will set the content type to ",(0,t.jsx)(n.code,{children:"application/json"})," if not set."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Path"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string",title:"string",children:"string"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-path"}),(0,t.jsx)("a",{href:"#route-fulfill-option-path",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["File path to respond with. The content type will be inferred from file extension. If ",(0,t.jsx)(n.code,{children:"path"})," is a relative path, then it is resolved relative to the current working directory."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Response"})," ",(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-apiresponse",title:"APIResponse",children:"APIResponse"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"})," ",(0,t.jsx)("font",{size:"2",children:"Added in: v1.15"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-response"}),(0,t.jsx)("a",{href:"#route-fulfill-option-response",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-apiresponse",title:"APIResponse",children:"APIResponse"})," to fulfill route's request with. Individual fields of the response (such as headers) can be overridden using fulfill options."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Status"})," ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32",title:"int",children:"int"}),"? ",(0,t.jsx)(n.em,{children:"(optional)"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-option-status"}),(0,t.jsx)("a",{href:"#route-fulfill-option-status",class:"list-anchor",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Response status code, defaults to ",(0,t.jsx)(n.code,{children:"200"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void",title:"void",children:"void"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-fulfill-return"}),(0,t.jsx)("a",{href:"#route-fulfill-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"route-request",children:"Request"}),"\n",(0,t.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added before v1.9"}),"\n",(0,t.jsx)("x-search",{children:"route.Request"}),"\n",(0,t.jsx)(n.p,{children:"A request to be routed."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Usage"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"Route.Request\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/dotnet/docs/next/api/class-request",title:"Request",children:"Request"}),(0,t.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"route-request-return"}),(0,t.jsx)("a",{href:"#route-request-return",class:"list-anchor",children:"#"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);
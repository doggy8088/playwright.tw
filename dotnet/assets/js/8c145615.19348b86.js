"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[3568],{1740:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=t(4848),i=t(8453);t(4235),t(8328),t(3078);const r={id:"test-runners",title:"\u6e2c\u8a66\u57f7\u884c\u5668"},o=void 0,l={id:"test-runners",title:"\u6e2c\u8a66\u57f7\u884c\u5668",description:"\u7c21\u4ecb",source:"@site/versioned_docs/version-stable/test-runners.mdx",sourceDirName:".",slug:"/test-runners",permalink:"/dotnet/docs/test-runners",draft:!1,unlisted:!1,tags:[],version:"stable",frontMatter:{id:"test-runners",title:"\u6e2c\u8a66\u57f7\u884c\u5668"},sidebar:"docs",previous:{title:"\u8a2d\u5b9a CI",permalink:"/dotnet/docs/ci-intro"},next:{title:"\u958b\u59cb\u4f7f\u7528 - \u51fd\u5f0f\u5eab",permalink:"/dotnet/docs/library"}},a={},c=[{value:"\u7c21\u4ecb",id:"\u7c21\u4ecb",level:2},{value:"MSTest",id:"mstest",level:2},{value:"\u57f7\u884c MSTest \u6e2c\u8a66\u4e26\u884c",id:"\u57f7\u884c-mstest-\u6e2c\u8a66\u4e26\u884c",level:3},{value:"\u81ea\u8a02 BrowserContext \u9078\u9805",id:"\u81ea\u8a02-browsercontext-\u9078\u9805",level:3},{value:"\u81ea\u8a02 Browser/launch options",id:"\u81ea\u8a02-browserlaunch-options",level:3},{value:"\u4f7f\u7528\u8a73\u7d30 API \u65e5\u8a8c",id:"\u4f7f\u7528\u8a73\u7d30-api-\u65e5\u8a8c",level:3},{value:"\u4f7f\u7528 .runsettings \u6a94\u6848",id:"\u4f7f\u7528-runsettings-\u6a94\u6848",level:3},{value:"Playwright \u7684\u57fa\u790e MSTest \u985e\u5225",id:"playwright-\u7684\u57fa\u790e-mstest-\u985e\u5225",level:3},{value:"NUnit",id:"nunit",level:2},{value:"\u57f7\u884c NUnit \u6e2c\u8a66\u5728\u5e73\u884c\u8655\u7406",id:"\u57f7\u884c-nunit-\u6e2c\u8a66\u5728\u5e73\u884c\u8655\u7406",level:3},{value:"\u81ea\u8a02 BrowserContext \u9078\u9805",id:"\u81ea\u8a02-browsercontext-\u9078\u9805-1",level:3},{value:"\u81ea\u8a02 Browser/launch options",id:"\u81ea\u8a02-browserlaunch-options-1",level:3},{value:"\u4f7f\u7528\u8a73\u7d30 API \u65e5\u8a8c",id:"\u4f7f\u7528\u8a73\u7d30-api-\u65e5\u8a8c-1",level:3},{value:"\u4f7f\u7528 .runsettings \u6a94\u6848",id:"\u4f7f\u7528-runsettings-\u6a94\u6848-1",level:3},{value:"Playwright \u7684\u57fa\u672c NUnit \u985e\u5225",id:"playwright-\u7684\u57fa\u672c-nunit-\u985e\u5225",level:3},{value:"xUnit \u652f\u63f4",id:"xunit-\u652f\u63f4",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\u7c21\u4ecb",children:"\u7c21\u4ecb"}),"\n",(0,s.jsxs)(n.p,{children:["\u96d6\u7136 Playwright for .NET \u4e26\u4e0d\u4f9d\u8cf4\u65bc\u7279\u5b9a\u7684\u6e2c\u8a66\u57f7\u884c\u5668\u6216\u6e2c\u8a66\u6846\u67b6\uff0c\u4f46\u6839\u64da\u6211\u5011\u7684\u7d93\u9a57\uff0c\u6700\u7c21\u55ae\u7684\u5165\u9580\u65b9\u6cd5\u662f\u4f7f\u7528\u6211\u5011\u70ba ",(0,s.jsx)(n.a,{href:"#mstest",children:"MSTest"})," \u548c ",(0,s.jsx)(n.a,{href:"#nunit",children:"NUnit"})," \u63d0\u4f9b\u7684\u57fa\u790e\u985e\u5225\u3002\u9019\u4e9b\u985e\u5225\u652f\u63f4\u5728\u591a\u500b\u700f\u89bd\u5668\u5f15\u64ce\u4e0a\u57f7\u884c\u6e2c\u8a66\uff0c\u8abf\u6574\u555f\u52d5/\u4e0a\u4e0b\u6587\u9078\u9805\uff0c\u4e26\u5728\u6bcf\u500b\u6e2c\u8a66\u4e2d\u7372\u53d6 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-page",title:"Page",children:"Page"}),"/",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"})," \u7269\u4ef6\u3002"]}),"\n",(0,s.jsx)(n.p,{children:"Playwright \u548c Browser \u5be6\u4f8b\u5c07\u5728\u6e2c\u8a66\u4e4b\u9593\u91cd\u8907\u4f7f\u7528\uff0c\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u6548\u80fd\u3002\u6211\u5011\u5efa\u8b70\u5728\u65b0\u7684 BrowserContext \u4e2d\u57f7\u884c\u6bcf\u500b\u6e2c\u8a66\u6848\u4f8b\uff0c\u9019\u6a23\u700f\u89bd\u5668\u72c0\u614b\u5c07\u5728\u6e2c\u8a66\u4e4b\u9593\u9694\u96e2\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"mstest",children:"MSTest"}),"\n",(0,s.jsxs)(n.p,{children:["Playwright \u63d0\u4f9b\u57fa\u790e\u985e\u5225\u4f86\u4f7f\u7528 MSTest \u64b0\u5beb\u6e2c\u8a66\uff0c\u900f\u904e ",(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Microsoft.Playwright.MSTest",children:(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest"})})," \u5957\u4ef6\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u8acb\u67e5\u770b",(0,s.jsx)(n.a,{href:"/dotnet/docs/intro",children:"\u5b89\u88dd\u6307\u5357"}),"\u4ee5\u958b\u59cb\u4f7f\u7528\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u57f7\u884c-mstest-\u6e2c\u8a66\u4e26\u884c",children:"\u57f7\u884c MSTest \u6e2c\u8a66\u4e26\u884c"}),"\n",(0,s.jsxs)(n.p,{children:["\u9810\u8a2d\u60c5\u6cc1\u4e0b\uff0cMSTest \u6703\u5e73\u884c\u8655\u7406\u6240\u6709\u985e\u5225\uff0c\u540c\u6642\u5728\u6bcf\u500b\u985e\u5225\u5167\u90e8\u4f9d\u5e8f\u57f7\u884c\u6e2c\u8a66\uff08",(0,s.jsx)(n.code,{children:"ExecutionScope.ClassLevel"}),"\uff09\u3002\u5b83\u6703\u5efa\u7acb\u8207\u4e3b\u6a5f\u7cfb\u7d71\u4e0a\u7684\u6838\u5fc3\u6578\u91cf\u76f8\u540c\u7684\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b CLI \u53c3\u6578\u6216\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:".runsettings"})," \u6587\u4ef6\u4f86\u8abf\u6574\u6b64\u884c\u70ba\uff0c\u8acb\u53c3\u898b\u4e0b\u6587\u3002\u5728\u65b9\u6cd5\u5c64\u7d1a\uff08",(0,s.jsx)(n.code,{children:"ExecutionScope.MethodLevel"}),"\uff09\u5e73\u884c\u8655\u7406\u6e2c\u8a66\u662f\u4e0d\u652f\u63f4\u7684\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet test --settings:.runsettings -- MSTest.Parallelize.Workers=4\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"\u81ea\u8a02-browsercontext-\u9078\u9805",children:["\u81ea\u8a02 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"})," \u9078\u9805"]}),"\n",(0,s.jsxs)(n.p,{children:["\u8981\u81ea\u8a02\u4e0a\u4e0b\u6587\u9078\u9805\uff0c\u60a8\u53ef\u4ee5\u8986\u5beb\u5f9e ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest.PageTest"})," \u6216 ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest.ContextTest"})," \u6d3e\u751f\u7684\u6e2c\u8a66\u985e\u5225\u7684 ",(0,s.jsx)(n.code,{children:"ContextOptions"})," \u65b9\u6cd5\u3002\u8acb\u53c3\u95b1\u4ee5\u4e0b\u7bc4\u4f8b:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using System.Threading.Tasks;\nusing Microsoft.Playwright;\nusing Microsoft.Playwright.MSTest;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\n\nnamespace PlaywrightTests;\n\n[TestClass]\npublic class ExampleTest : PageTest\n{\n    [TestMethod]\n    public async Task TestWithCustomContextOptions()\n    {\n        // The following Page (and BrowserContext) instance has the custom colorScheme, viewport and baseURL set:\n        await Page.GotoAsync("/login");\n    }\n\n    public override BrowserNewContextOptions ContextOptions()\n    {\n        return new BrowserNewContextOptions()\n        {\n            ColorScheme = ColorScheme.Light,\n            ViewportSize = new()\n            {\n                Width = 1920,\n                Height = 1080\n            },\n            BaseURL = "https://github.com",\n        };\n    }\n}\n\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"\u81ea\u8a02-browserlaunch-options",children:["\u81ea\u8a02 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser",title:"Browser",children:"Browser"}),"/launch options"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser",title:"Browser",children:"Browser"}),"/launch options \u53ef\u4ee5\u900f\u904e\u4f7f\u7528\u57f7\u884c\u8a2d\u5b9a\u6a94\u6848\u6216\u76f4\u63a5\u900f\u904e CLI \u8a2d\u5b9a\u57f7\u884c\u8a2d\u5b9a\u9078\u9805\u4f86\u8986\u84cb\u3002\u8acb\u53c3\u95b1\u4ee5\u4e0b\u7bc4\u4f8b:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n<RunSettings>\n  <Playwright>\n    <BrowserName>chromium</BrowserName>\n    <LaunchOptions>\n      <Headless>false</Headless>\n      <Channel>msedge</Channel>\n    </LaunchOptions>\n  </Playwright>\n</RunSettings>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet test -- Playwright.BrowserName=chromium Playwright.LaunchOptions.Headless=false Playwright.LaunchOptions.Channel=msedge\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u4f7f\u7528\u8a73\u7d30-api-\u65e5\u8a8c",children:"\u4f7f\u7528\u8a73\u7d30 API \u65e5\u8a8c"}),"\n",(0,s.jsxs)(n.p,{children:["\u7576\u4f60\u555f\u7528\u4e86 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/debug#verbose-api-logs",children:"verbose API log"}),", \u901a\u904e ",(0,s.jsx)(n.code,{children:"DEBUG"})," \u74b0\u5883\u8b8a\u6578\uff0c\u4f60\u5c07\u5728\u6a19\u6e96\u932f\u8aa4\u6d41\u4e2d\u770b\u5230\u9019\u4e9b\u8a0a\u606f\u3002\u5728 MSTest \u4e2d\uff0c\u5728 Visual Studio \u5167\uff0c\u9019\u4e9b\u8a0a\u606f\u5c07\u986f\u793a\u5728 ",(0,s.jsx)(n.code,{children:"Output"})," \u8996\u7a97\u7684 ",(0,s.jsx)(n.code,{children:"Tests"})," \u7a97\u683c\u4e2d\u3002\u5b83\u4e5f\u6703\u986f\u793a\u5728\u6bcf\u500b\u6e2c\u8a66\u7684 ",(0,s.jsx)(n.code,{children:"Test Log"})," \u4e2d\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u4f7f\u7528-runsettings-\u6a94\u6848",children:"\u4f7f\u7528 .runsettings \u6a94\u6848"}),"\n",(0,s.jsxs)(n.p,{children:["\u7576\u5f9e Visual Studio \u57f7\u884c\u6e2c\u8a66\u6642\uff0c\u4f60\u53ef\u4ee5\u5229\u7528 ",(0,s.jsx)(n.code,{children:".runsettings"})," \u6a94\u6848\u3002\u4ee5\u4e0b\u986f\u793a\u652f\u63f4\u503c\u7684\u53c3\u8003\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u4f8b\u5982\uff0c\u8981\u6307\u5b9a\u5de5\u4f5c\u8005\u7684\u6578\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"MSTest.Parallelize.Workers"}),"\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"RunConfiguration.EnvironmentVariables"})," \u555f\u7528 ",(0,s.jsx)(n.code,{children:"DEBUG"})," \u65e5\u8a8c\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<RunSettings>\n  \x3c!-- MSTest adapter --\x3e\n  <MSTest>\n    <Parallelize>\n      <Workers>4</Workers>\n      <Scope>ClassLevel</Scope>\n    </Parallelize>\n  </MSTest>\n  \x3c!-- General run configuration --\x3e\n  <RunConfiguration>\n    <EnvironmentVariables>\n      \x3c!-- For debugging selectors, it's recommend to set the following environment variable --\x3e\n      <DEBUG>pw:api</DEBUG>\n    </EnvironmentVariables>\n  </RunConfiguration>\n  \x3c!-- Playwright --\x3e\n  <Playwright>\n    <BrowserName>chromium</BrowserName>\n    <ExpectTimeout>5000</ExpectTimeout>\n    <LaunchOptions>\n      <Headless>false</Headless>\n      <Channel>msedge</Channel>\n    </LaunchOptions>\n  </Playwright>\n</RunSettings>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"playwright-\u7684\u57fa\u790e-mstest-\u985e\u5225",children:"Playwright \u7684\u57fa\u790e MSTest \u985e\u5225"}),"\n",(0,s.jsxs)(n.p,{children:["\u5728 ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest"})," \u547d\u540d\u7a7a\u9593\u4e2d\uff0c\u6709\u4e00\u4e9b\u53ef\u7528\u7684\u57fa\u790e\u985e\u5225:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Test"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PageTest"}),(0,s.jsxs)(n.td,{children:["Each test gets a fresh copy of a web ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-page",title:"Page",children:"Page"})," \u5efa\u7acb in its own unique ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"}),". Extending this \u985e\u5225 is the simplest way of writing a fully-functional Playwright test\u3002",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Note: You can override the ",(0,s.jsx)(n.code,{children:"ContextOptions"})," method in each test file to control context options, the ones typically passed into the ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser#browser-new-context",children:"Browser.NewContextAsync"})," method\u3002That way you can specify all kinds of emulation options for your test file individually\u3002"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ContextTest"}),(0,s.jsxs)(n.td,{children:["Each test will get a fresh copy of a ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"}),". You can \u5efa\u7acb as many pages in this context as you'd like\u3002Using this test is the easiest way to test multi-page scenarios where you need more than one tab\u3002",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Note: You can override the ",(0,s.jsx)(n.code,{children:"ContextOptions"})," method in each test file to control context options, the ones typically passed into the ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser#browser-new-context",children:"Browser.NewContextAsync"})," method\u3002That way you can specify all kinds of emulation options for your test file individually\u3002"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BrowserTest"}),(0,s.jsx)(n.td,{children:"Each test will get a browser and can \u5efa\u7acb as many contexts as it likes\u3002Each test is responsible for cleaning up all the contexts it \u5efa\u7acb\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PlaywrightTest"}),(0,s.jsx)(n.td,{children:"This gives each test a Playwright \u7269\u4ef6 so that the test could start and stop as many browsers as it likes\u3002"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"nunit",children:"NUnit"}),"\n",(0,s.jsxs)(n.p,{children:["Playwright \u63d0\u4f9b\u57fa\u790e\u985e\u5225\u4f86\u4f7f\u7528 NUnit \u64b0\u5beb\u6e2c\u8a66\uff0c\u900f\u904e ",(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Microsoft.Playwright.NUnit",children:(0,s.jsx)(n.code,{children:"Microsoft.Playwright.NUnit"})})," \u5957\u4ef6\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u8acb\u67e5\u770b",(0,s.jsx)(n.a,{href:"/dotnet/docs/intro",children:"\u5b89\u88dd\u6307\u5357"}),"\u4ee5\u958b\u59cb\u4f7f\u7528\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u57f7\u884c-nunit-\u6e2c\u8a66\u5728\u5e73\u884c\u8655\u7406",children:"\u57f7\u884c NUnit \u6e2c\u8a66\u5728\u5e73\u884c\u8655\u7406"}),"\n",(0,s.jsxs)(n.p,{children:["\u6839\u64da\u9810\u8a2d\uff0cNUnit \u6703\u5e73\u884c\u57f7\u884c\u6240\u6709\u6e2c\u8a66\u6a94\u6848\uff0c\u540c\u6642\u5728\u6bcf\u500b\u6a94\u6848\u5167\u90e8\u9806\u5e8f\u57f7\u884c\u6e2c\u8a66\uff08",(0,s.jsx)(n.code,{children:"ParallelScope.Self"}),"\uff09\u3002\u5b83\u6703\u5efa\u7acb\u8207\u4e3b\u6a5f\u7cfb\u7d71\u4e0a\u6838\u5fc3\u6578\u91cf\u76f8\u540c\u7684\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 NUnit.NumberOfTestWorkers \u53c3\u6578\u4f86\u8abf\u6574\u6b64\u884c\u70ba\u3002\u50c5\u652f\u63f4 ",(0,s.jsx)(n.code,{children:"ParallelScope.Self"}),"\u3002"]}),"\n",(0,s.jsx)(n.p,{children:"\u5c0d\u65bc CPU \u5bc6\u96c6\u578b\u6e2c\u8a66\uff0c\u6211\u5011\u5efa\u8b70\u4f7f\u7528\u8207\u7cfb\u7d71\u6838\u5fc3\u6578\u91cf\u76f8\u540c\u7684\u5de5\u4f5c\u8005\u6578\u91cf\uff0c\u9664\u4ee5 2\u3002\u5c0d\u65bc IO \u5bc6\u96c6\u578b\u6e2c\u8a66\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8207\u6838\u5fc3\u6578\u91cf\u76f8\u540c\u7684\u5de5\u4f5c\u8005\u6578\u91cf\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet test -- NUnit.NumberOfTestWorkers=5\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"\u81ea\u8a02-browsercontext-\u9078\u9805-1",children:["\u81ea\u8a02 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"})," \u9078\u9805"]}),"\n",(0,s.jsxs)(n.p,{children:["\u8981\u81ea\u8a02\u4e0a\u4e0b\u6587\u9078\u9805\uff0c\u60a8\u53ef\u4ee5\u8986\u5beb\u5f9e ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest.PageTest"})," \u6216 ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.MSTest.ContextTest"})," \u6d3e\u751f\u7684\u6e2c\u8a66\u985e\u5225\u7684 ",(0,s.jsx)(n.code,{children:"ContextOptions"})," \u65b9\u6cd5\u3002\u8acb\u53c3\u95b1\u4ee5\u4e0b\u7bc4\u4f8b:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using Microsoft.Playwright.NUnit;\n\nnamespace PlaywrightTests;\n\n[Parallelizable(ParallelScope.Self)]\n[TestFixture]\npublic class MyTest : PageTest\n{\n    [Test]\n    public async Task TestWithCustomContextOptions()\n    {\n        // The following Page (and BrowserContext) instance has the custom colorScheme, viewport and baseURL set:\n        await Page.GotoAsync("/login");\n    }\n\n    public override BrowserNewContextOptions ContextOptions()\n    {\n        return new BrowserNewContextOptions()\n        {\n            ColorScheme = ColorScheme.Light,\n            ViewportSize = new()\n            {\n                Width = 1920,\n                Height = 1080\n            },\n            BaseURL = "https://github.com",\n        };\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"\u81ea\u8a02-browserlaunch-options-1",children:["\u81ea\u8a02 ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser",title:"Browser",children:"Browser"}),"/launch options"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser",title:"Browser",children:"Browser"}),"/launch options \u53ef\u4ee5\u900f\u904e\u4f7f\u7528\u57f7\u884c\u8a2d\u5b9a\u6a94\u6848\u6216\u76f4\u63a5\u900f\u904e CLI \u8a2d\u5b9a\u57f7\u884c\u8a2d\u5b9a\u9078\u9805\u4f86\u8986\u84cb\u3002\u8acb\u53c3\u95b1\u4ee5\u4e0b\u7bc4\u4f8b:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n<RunSettings>\n  <Playwright>\n    <BrowserName>chromium</BrowserName>\n    <LaunchOptions>\n      <Headless>false</Headless>\n      <Channel>msedge</Channel>\n    </LaunchOptions>\n  </Playwright>\n</RunSettings>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet test -- Playwright.BrowserName=chromium Playwright.LaunchOptions.Headless=false Playwright.LaunchOptions.Channel=msedge\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u4f7f\u7528\u8a73\u7d30-api-\u65e5\u8a8c-1",children:"\u4f7f\u7528\u8a73\u7d30 API \u65e5\u8a8c"}),"\n",(0,s.jsxs)(n.p,{children:["\u7576\u4f60\u555f\u7528",(0,s.jsx)(n.a,{href:"/dotnet/docs/debug#verbose-api-logs",children:"\u8a73\u7d30 API \u65e5\u8a8c"}),"\u6642\uff0c\u901a\u904e ",(0,s.jsx)(n.code,{children:"DEBUG"})," \u74b0\u5883\u8b8a\u6578\uff0c\u4f60\u5c07\u5728\u6a19\u6e96\u932f\u8aa4\u6d41\u4e2d\u770b\u5230\u9019\u4e9b\u8a0a\u606f\u3002\u5728 NUnit \u4e2d\uff0c\u5728 Visual Studio \u5167\uff0c\u9019\u4e9b\u8a0a\u606f\u5c07\u986f\u793a\u5728 ",(0,s.jsx)(n.code,{children:"Output"})," \u8996\u7a97\u7684 ",(0,s.jsx)(n.code,{children:"Tests"})," \u7a97\u683c\u4e2d\u3002\u5b83\u4e5f\u6703\u986f\u793a\u5728\u6bcf\u500b\u6e2c\u8a66\u7684 ",(0,s.jsx)(n.code,{children:"Test Log"})," \u4e2d\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u4f7f\u7528-runsettings-\u6a94\u6848-1",children:"\u4f7f\u7528 .runsettings \u6a94\u6848"}),"\n",(0,s.jsxs)(n.p,{children:["\u7576\u5f9e Visual Studio \u57f7\u884c\u6e2c\u8a66\u6642\uff0c\u4f60\u53ef\u4ee5\u5229\u7528 ",(0,s.jsx)(n.code,{children:".runsettings"})," \u6a94\u6848\u3002\u4ee5\u4e0b\u986f\u793a\u652f\u63f4\u503c\u7684\u53c3\u8003\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u4f8b\u5982\uff0c\u8981\u6307\u5b9a\u5de5\u4f5c\u4eba\u54e1\u7684\u6578\u91cf\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"NUnit.NumberOfTestWorkers"})," \u6216\u555f\u7528 ",(0,s.jsx)(n.code,{children:"DEBUG"})," \u65e5\u8a8c ",(0,s.jsx)(n.code,{children:"RunConfiguration.EnvironmentVariables"}),"\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n<RunSettings>\n  \x3c!-- NUnit adapter --\x3e\n  <NUnit>\n    <NumberOfTestWorkers>24</NumberOfTestWorkers>\n  </NUnit>\n  \x3c!-- General run configuration --\x3e\n  <RunConfiguration>\n    <EnvironmentVariables>\n      \x3c!-- For debugging selectors, it\'s recommend to set the following environment variable --\x3e\n      <DEBUG>pw:api</DEBUG>\n    </EnvironmentVariables>\n  </RunConfiguration>\n  \x3c!-- Playwright --\x3e\n  <Playwright>\n    <BrowserName>chromium</BrowserName>\n    <ExpectTimeout>5000</ExpectTimeout>\n    <LaunchOptions>\n      <Headless>false</Headless>\n      <Channel>msedge</Channel>\n    </LaunchOptions>\n  </Playwright>\n</RunSettings>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"playwright-\u7684\u57fa\u672c-nunit-\u985e\u5225",children:"Playwright \u7684\u57fa\u672c NUnit \u985e\u5225"}),"\n",(0,s.jsxs)(n.p,{children:["\u5728 ",(0,s.jsx)(n.code,{children:"Microsoft.Playwright.NUnit"})," \u547d\u540d\u7a7a\u9593\u4e2d\uff0c\u6709\u4e00\u4e9b\u53ef\u7528\u7684\u57fa\u790e\u985e\u5225:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Test"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PageTest"}),(0,s.jsxs)(n.td,{children:["Each test gets a fresh copy of a web ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-page",title:"Page",children:"Page"})," \u5efa\u7acb in its own unique ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"}),". Extending this \u985e\u5225 is the simplest way of writing a fully-functional Playwright test\u3002",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Note: You can override the ",(0,s.jsx)(n.code,{children:"ContextOptions"})," method in each test file to control context options, the ones typically passed into the ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser#browser-new-context",children:"Browser.NewContextAsync"})," method\u3002That way you can specify all kinds of emulation options for your test file individually\u3002"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ContextTest"}),(0,s.jsxs)(n.td,{children:["Each test will get a fresh copy of a ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browsercontext",title:"BrowserContext",children:"BrowserContext"}),". You can \u5efa\u7acb as many pages in this context as you'd like\u3002Using this test is the easiest way to test multi-page scenarios where you need more than one tab\u3002",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Note: You can override the ",(0,s.jsx)(n.code,{children:"ContextOptions"})," method in each test file to control context options, the ones typically passed into the ",(0,s.jsx)(n.a,{href:"/dotnet/docs/api/class-browser#browser-new-context",children:"Browser.NewContextAsync"})," method\u3002That way you can specify all kinds of emulation options for your test file individually\u3002"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BrowserTest"}),(0,s.jsx)(n.td,{children:"Each test will get a browser and can \u5efa\u7acb as many contexts as it likes\u3002Each test is responsible for cleaning up all the contexts it \u5efa\u7acb\u3002"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PlaywrightTest"}),(0,s.jsx)(n.td,{children:"This gives each test a Playwright \u7269\u4ef6 so that the test could start and stop as many browsers as it likes\u3002"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"xunit-\u652f\u63f4",children:"xUnit \u652f\u63f4"}),"\n",(0,s.jsxs)(n.p,{children:["\u4f7f\u7528 xUnit \u4e5f\u662f\u652f\u63f4\u7684\uff0c\u4f46\u6211\u5011\u4e0d\u652f\u63f4\u5e73\u884c\u57f7\u884c\u6e2c\u8a66\u3002\u9019\u662f\u4e00\u500b\u773e\u6240\u5468\u77e5\u7684\u554f\u984c/\u8a2d\u8a08\u9650\u5236\uff0c\u7531\u7dad\u8b77\u8005\u5728",(0,s.jsx)(n.a,{href:"https://github.com/xunit/xunit/issues/2003",children:"\u5e7e\u500b"})," ",(0,s.jsx)(n.a,{href:"https://github.com/xunit/xunit/issues/2111#issuecomment-650004247",children:"\u554f\u984c"}),"\u4e2d\u6982\u8ff0\u3002"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
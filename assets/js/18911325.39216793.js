"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[4033],{5995:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=n(4848),r=n(8453);n(4235),n(8328),n(3078);const o={id:"docker",title:"Docker"},t=void 0,l={id:"docker",title:"Docker",description:"Introduction",source:"@site/docs/docker.mdx",sourceDirName:".",slug:"/docker",permalink:"/docs/next/docker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"docker",title:"Docker"},sidebar:"docs",previous:{title:"Migrating from Testing Library",permalink:"/docs/next/testing-library"},next:{title:"Continuous Integration",permalink:"/docs/next/ci"}},a={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Usage",id:"usage",level:2},{value:"Pull the image",id:"pull-the-image",level:3},{value:"Run the image",id:"run-the-image",level:3},{value:"End-to-end tests",id:"end-to-end-tests",level:4},{value:"Crawling and scraping",id:"crawling-and-scraping",level:4},{value:"Using on CI",id:"using-on-ci",level:3},{value:"Image tags",id:"image-tags",level:2},{value:"Base images",id:"base-images",level:3},{value:"Alpine",id:"alpine",level:4},{value:"Build your own image",id:"build-your-own-image",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/microsoft/playwright/blob/main/utils/docker/Dockerfile.jammy",title:"Dockerfile.jammy",children:"Dockerfile.jammy"})," can be used to run Playwright scripts in Docker environment. This image includes the ",(0,s.jsx)(i.a,{href:"/docs/next/browsers#install-browsers",children:"Playwright browsers"})," and ",(0,s.jsx)(i.a,{href:"/docs/next/browsers#install-system-dependencies",children:"browser system dependencies"}),". The Playwright package/dependency is not included in the image and should be installed separately."]}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(i.p,{children:["This Docker image is published to ",(0,s.jsx)(i.a,{href:"https://mcr.microsoft.com/en-us/product/playwright/about",title:"Microsoft Artifact Registry",children:"Microsoft Artifact Registry"}),"."]}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsx)(i.p,{children:"This Docker image is intended to be used for testing and development purposes only. It is not recommended to use this Docker image to visit untrusted websites."})}),"\n",(0,s.jsx)(i.h3,{id:"pull-the-image",children:"Pull the image"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"docker pull mcr.microsoft.com/playwright:v1.47.0-noble\n"})}),"\n",(0,s.jsx)(i.h3,{id:"run-the-image",children:"Run the image"}),"\n",(0,s.jsxs)(i.p,{children:["By default, the Docker image will use the ",(0,s.jsx)(i.code,{children:"root"})," user to run the browsers. This will disable the Chromium sandbox which is not available with root. If you run trusted code (e.g. End-to-end tests) and want to avoid the hassle of managing separate user then the root user may be fine. For web scraping or crawling, we recommend to create a separate user inside the Docker container and use the seccomp profile."]}),"\n",(0,s.jsx)(i.h4,{id:"end-to-end-tests",children:"End-to-end tests"}),"\n",(0,s.jsx)(i.p,{children:"On trusted websites, you can avoid creating a separate user and use root for it since you trust the code which will run on the browsers."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"docker run -it --rm --ipc=host mcr.microsoft.com/playwright:v1.47.0-noble /bin/bash\n"})}),"\n",(0,s.jsx)(i.h4,{id:"crawling-and-scraping",children:"Crawling and scraping"}),"\n",(0,s.jsxs)(i.p,{children:["On untrusted websites, it's recommended to use a separate user for launching the browsers in combination with the seccomp profile. Inside the container or if you are using the Docker image as a base image you have to use ",(0,s.jsx)(i.code,{children:"adduser"})," for it."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-bash",children:"docker run -it --rm --ipc=host --user pwuser --security-opt seccomp=seccomp_profile.json mcr.microsoft.com/playwright:v1.47.0-noble /bin/bash\n"})}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"https://github.com/microsoft/playwright/blob/main/utils/docker/seccomp_profile.json",children:(0,s.jsx)(i.code,{children:"seccomp_profile.json"})})," is needed to run Chromium with sandbox. This is a ",(0,s.jsx)(i.a,{href:"https://github.com/docker/engine/blob/d0d99b04cf6e00ed3fc27e81fc3d94e7eda70af3/profiles/seccomp/default.json",children:"default Docker seccomp profile"})," with extra user namespace cloning permissions:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "comment": "Allow create user namespaces",\n  "names": [\n    "clone",\n    "setns",\n    "unshare"\n  ],\n  "action": "SCMP_ACT_ALLOW",\n  "args": [],\n  "includes": {},\n  "excludes": {}\n}\n'})}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:["Using ",(0,s.jsx)(i.code,{children:"--ipc=host"})," is recommended when using Chrome (",(0,s.jsx)(i.a,{href:"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc",children:"Docker docs"}),"). Chrome can run out of memory without this flag."]})}),"\n",(0,s.jsx)(i.h3,{id:"using-on-ci",children:"Using on CI"}),"\n",(0,s.jsxs)(i.p,{children:["See our ",(0,s.jsx)(i.a,{href:"/docs/next/ci",children:"Continuous Integration guides"})," for sample configs."]}),"\n",(0,s.jsx)(i.h2,{id:"image-tags",children:"Image tags"}),"\n",(0,s.jsxs)(i.p,{children:["See ",(0,s.jsx)(i.a,{href:"https://mcr.microsoft.com/en-us/product/playwright/about",title:"all available image tags",children:"all available image tags"}),"."]}),"\n",(0,s.jsx)(i.p,{children:"We currently publish images with the following tags:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:":v1.47.0"})," - Playwright v1.47.0 release docker image based on Ubuntu 24.04 LTS (Noble Numbat)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:":v1.47.0-noble"})," - Playwright v1.47.0 release docker image based on Ubuntu 24.04 LTS (Noble Numbat)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:":v1.47.0-jammy"})," - Playwright v1.47.0 release docker image based on Ubuntu 22.04 LTS (Jammy Jellyfish)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:":v1.47.0-focal"})," - Playwright v1.47.0 release docker image based on Ubuntu 20.04 LTS (Focal Fossa)."]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"It is recommended to always pin your Docker image to a specific version if possible. If the Playwright version in your Docker image does not match the version in your project/tests, Playwright will be unable to locate browser executables."})}),"\n",(0,s.jsx)(i.h3,{id:"base-images",children:"Base images"}),"\n",(0,s.jsxs)(i.p,{children:["We currently publish images based on the following ",(0,s.jsx)(i.a,{href:"https://hub.docker.com/_/ubuntu",children:"Ubuntu"})," versions:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Ubuntu 24.04 LTS"})," (Noble Numbat), image tags include ",(0,s.jsx)(i.code,{children:"noble"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Ubuntu 22.04 LTS"})," (Jammy Jellyfish), image tags include ",(0,s.jsx)(i.code,{children:"jammy"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Ubuntu 20.04 LTS"})," (Focal Fossa), image tags include ",(0,s.jsx)(i.code,{children:"focal"})]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"alpine",children:"Alpine"}),"\n",(0,s.jsxs)(i.p,{children:["Browser builds for Firefox and WebKit are built for the ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Glibc",children:"glibc"})," library. Alpine Linux and other distributions that are based on the ",(0,s.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Musl",children:"musl"})," standard library are not supported."]}),"\n",(0,s.jsx)(i.h2,{id:"build-your-own-image",children:"Build your own image"}),"\n",(0,s.jsxs)(i.p,{children:["To run Playwright inside Docker, you need to have Node.js, ",(0,s.jsx)(i.a,{href:"/docs/next/browsers#install-browsers",children:"Playwright browsers"})," and ",(0,s.jsx)(i.a,{href:"/docs/next/browsers#install-system-dependencies",children:"browser system dependencies"})," installed. See the following Dockerfile:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-Dockerfile",children:"FROM node:20-bookworm\n\nRUN npx -y playwright@1.47.0 install --with-deps\n"})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
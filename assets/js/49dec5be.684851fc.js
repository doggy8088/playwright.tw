"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[7028],{3732:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(4848),r=t(8453);t(4235),t(8328),t(3078);const a={id:"screenshots",title:"Screenshots"},c=void 0,i={id:"screenshots",title:"Screenshots",description:"Introduction",source:"@site/docs/screenshots.mdx",sourceDirName:".",slug:"/screenshots",permalink:"/docs/next/screenshots",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"screenshots",title:"Screenshots"},sidebar:"docs",previous:{title:"Pages",permalink:"/docs/next/pages"},next:{title:"Visual comparisons",permalink:"/docs/next/test-snapshots"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Full page screenshots",id:"full-page-screenshots",level:2},{value:"Capture into buffer",id:"capture-into-buffer",level:2},{value:"Element screenshot",id:"element-screenshot",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(s.p,{children:"Here is a quick way to capture a screenshot and save it into a file:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"await page.screenshot({ path: 'screenshot.png' });\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"./api/class-page#page-screenshot",children:"Screenshots API"})," accepts many parameters for image format, clip area, quality, etc. Make sure to check them out."]}),"\n",(0,n.jsx)(s.h2,{id:"full-page-screenshots",children:"Full page screenshots"}),"\n",(0,n.jsx)(s.p,{children:"Full page screenshot is a screenshot of a full scrollable page, as if you had a very tall screen and the page could fit it entirely."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"await page.screenshot({ path: 'screenshot.png', fullPage: true });\n"})}),"\n",(0,n.jsx)(s.h2,{id:"capture-into-buffer",children:"Capture into buffer"}),"\n",(0,n.jsx)(s.p,{children:"Rather than writing into a file, you can get a buffer with the image and post-process it or pass it to a third party pixel diff facility."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"const buffer = await page.screenshot();\nconsole.log(buffer.toString('base64'));\n"})}),"\n",(0,n.jsx)(s.h2,{id:"element-screenshot",children:"Element screenshot"}),"\n",(0,n.jsx)(s.p,{children:"Sometimes it is useful to take a screenshot of a single element."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",children:"await page.locator('.header').screenshot({ path: 'screenshot.png' });\n"})})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);
"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[8509],{7782:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var i=s(4848),n=s(8453),o=s(4235),l=s(8328);s(3078);const r={id:"test-timeouts",title:"Timeouts"},a=void 0,c={id:"test-timeouts",title:"Timeouts",description:"Introduction",source:"@site/docs/test-timeouts.mdx",sourceDirName:".",slug:"/test-timeouts",permalink:"/docs/next/test-timeouts",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"test-timeouts",title:"Timeouts"},sidebar:"docs",previous:{title:"Sharding",permalink:"/docs/next/test-sharding"},next:{title:"TypeScript",permalink:"/docs/next/test-typescript"}},d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Test timeout",id:"test-timeout",level:2},{value:"Set test timeout in the config",id:"set-test-timeout-in-the-config",level:3},{value:"Set timeout for a single test",id:"set-timeout-for-a-single-test",level:3},{value:"Change timeout from a <code>beforeEach</code> hook",id:"change-timeout-from-a-beforeeach-hook",level:3},{value:"Change timeout for <code>beforeAll</code>/<code>afterAll</code> hook",id:"change-timeout-for-beforeallafterall-hook",level:3},{value:"Expect timeout",id:"expect-timeout",level:2},{value:"Set expect timeout in the config",id:"set-expect-timeout-in-the-config",level:3},{value:"Global timeout",id:"global-timeout",level:2},{value:"Advanced: low level timeouts",id:"advanced-low-level-timeouts",level:2},{value:"Set timeout for a single assertion",id:"set-timeout-for-a-single-assertion",level:3},{value:"Set action and navigation timeouts in the config",id:"set-action-and-navigation-timeouts-in-the-config",level:3},{value:"Set timeout for a single action",id:"set-timeout-for-a-single-action",level:3},{value:"Fixture timeout",id:"fixture-timeout",level:2}];function x(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"Playwright Test has multiple configurable timeouts for various tasks."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Timeout"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Test timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"30000 ms"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for each test, includes test, hooks and fixtures:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set default"}),(0,i.jsx)("br",{}),(0,i.jsx)("code",{children:"config = { timeout: 60000 }"}),(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Override"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"test.setTimeout(120000)"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Expect timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"5000 ms"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for each assertion:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set default"}),(0,i.jsx)("br",{}),(0,i.jsx)("code",{children:"config = { expect: { timeout: 10000 } }"}),(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Override"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"expect(locator).toBeVisible({ timeout: 10000 })"})]})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"test-timeout",children:"Test timeout"}),"\n",(0,i.jsxs)(t.p,{children:["Playwright Test enforces a timeout for each test, 30 seconds by default. Time spent by the test function, fixtures, ",(0,i.jsx)(t.code,{children:"beforeEach"})," and ",(0,i.jsx)(t.code,{children:"afterEach"})," hooks is included in the test timeout."]}),"\n",(0,i.jsx)(t.p,{children:"Timed out test produces the following error:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-txt",children:"example.spec.ts:3:1 \u203a basic test ===========================\n\nTimeout of 30000ms exceeded.\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The same timeout value also applies to ",(0,i.jsx)(t.code,{children:"beforeAll"})," and ",(0,i.jsx)(t.code,{children:"afterAll"})," hooks, but they do not share time with any test."]}),"\n",(0,i.jsx)(t.h3,{id:"set-test-timeout-in-the-config",children:"Set test timeout in the config"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  timeout: 5 * 60 * 1000,\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testconfig#test-config-timeout",children:"testConfig.timeout"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"set-timeout-for-a-single-test",children:"Set timeout for a single test"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test, expect } from '@playwright/test';\n\ntest('slow test', async ({ page }) => {\n  test.slow(); // Easy way to triple the default timeout\n  // ...\n});\n\ntest('very slow test', async ({ page }) => {\n  test.setTimeout(120000);\n  // ...\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-test#test-set-timeout",children:"test.setTimeout()"})," and ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-test#test-slow",children:"test.slow()"}),"."]}),"\n",(0,i.jsxs)(t.h3,{id:"change-timeout-from-a-beforeeach-hook",children:["Change timeout from a ",(0,i.jsx)(t.code,{children:"beforeEach"})," hook"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test, expect } from '@playwright/test';\n\ntest.beforeEach(async ({ page }, testInfo) => {\n  // Extend timeout for all tests running this hook by 30 seconds.\n  testInfo.setTimeout(testInfo.timeout + 30000);\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testinfo#test-info-set-timeout",children:"testInfo.setTimeout()"}),"."]}),"\n",(0,i.jsxs)(t.h3,{id:"change-timeout-for-beforeallafterall-hook",children:["Change timeout for ",(0,i.jsx)(t.code,{children:"beforeAll"}),"/",(0,i.jsx)(t.code,{children:"afterAll"})," hook"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"beforeAll"})," and ",(0,i.jsx)(t.code,{children:"afterAll"})," hooks have a separate timeout, by default equal to test timeout. You can change it separately for each hook by calling ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testinfo#test-info-set-timeout",children:"testInfo.setTimeout()"})," inside the hook."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test, expect } from '@playwright/test';\n\ntest.beforeAll(async () => {\n  // Set timeout for this hook.\n  test.setTimeout(60000);\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testinfo#test-info-set-timeout",children:"testInfo.setTimeout()"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"expect-timeout",children:"Expect timeout"}),"\n",(0,i.jsxs)(t.p,{children:["Web-first assertions like ",(0,i.jsx)(t.code,{children:"expect(locator).toHaveText()"})," have a separate timeout, 5 seconds by default. Assertion timeout is unrelated to the test timeout. It produces the following error:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-txt",children:'example.spec.ts:3:1 \u203a basic test ===========================\n\nError: expect(received).toHaveText(expected)\n\nExpected string: "my text"\nReceived string: ""\nCall log:\n  - expect.toHaveText with timeout 5000ms\n  - waiting for "locator(\'button\')"\n'})}),"\n",(0,i.jsx)(t.h3,{id:"set-expect-timeout-in-the-config",children:"Set expect timeout in the config"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  expect: {\n    timeout: 10 * 1000,\n  },\n});\n"})}),"\n",(0,i.jsx)(t.h2,{id:"global-timeout",children:"Global timeout"}),"\n",(0,i.jsx)(t.p,{children:"Playwright Test supports a timeout for the whole test run. This prevents excess resource usage when everything went wrong. There is no default global timeout, but you can set a reasonable one in the config, for example one hour. Global timeout produces the following error:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-txt",children:"Running 1000 tests using 10 workers\n\n  514 skipped\n  486 passed\n  Timed out waiting 3600s for the entire test run\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can set global timeout in the config."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"// playwright.config.ts\nimport { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  globalTimeout: 60 * 60 * 1000,\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testconfig#test-config-global-timeout",children:"testConfig.globalTimeout"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"advanced-low-level-timeouts",children:"Advanced: low level timeouts"}),"\n",(0,i.jsx)(t.p,{children:"These are the low-level timeouts that are pre-configured by the test runner, you should not need to change these. If you happen to be in this section because your test are flaky, it is very likely that you should be looking for the solution elsewhere."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Timeout"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Default"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Action timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"no timeout"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for each action:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set default"}),(0,i.jsx)("br",{}),(0,i.jsx)("code",{children:"config = { use: { actionTimeout: 10000 } }"}),(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Override"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"locator.click({ timeout: 10000 })"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Navigation timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"no timeout"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for each navigation action:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set default"}),(0,i.jsx)("br",{}),(0,i.jsx)("code",{children:"config = { use: { navigationTimeout: 30000 } }"}),(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Override"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"page.goto('/', { timeout: 30000 })"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Global timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"no timeout"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Global timeout for the whole test run:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set in config"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"config = { globalTimeout: 60*60*1000 }"}),(0,i.jsx)("br",{})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,i.jsx)(t.code,{children:"beforeAll"}),"/",(0,i.jsx)(t.code,{children:"afterAll"})," timeout"]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"30000 ms"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for the hook:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set in hook"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"test.setTimeout(60000)"}),(0,i.jsx)("br",{})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Fixture timeout"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"no timeout"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Timeout for an individual fixture:",(0,i.jsx)("br",{}),(0,i.jsx)("span",{style:{textTransform:"uppercase",fontSize:"smaller",fontWeight:"bold",opacity:"0.7"},children:"Set in fixture"}),(0,i.jsx)("br",{}),(0,i.jsx)(t.code,{children:"{ scope: 'test', timeout: 30000 }"}),(0,i.jsx)("br",{})]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"set-timeout-for-a-single-assertion",children:"Set timeout for a single assertion"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test, expect } from '@playwright/test';\n\ntest('basic test', async ({ page }) => {\n  await expect(page.getByRole('button')).toHaveText('Sign in', { timeout: 10000 });\n});\n"})}),"\n",(0,i.jsx)(t.h3,{id:"set-action-and-navigation-timeouts-in-the-config",children:"Set action and navigation timeouts in the config"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",metastring:'title="playwright.config.ts"',children:"import { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    actionTimeout: 10 * 1000,\n    navigationTimeout: 30 * 1000,\n  },\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testoptions#test-options-action-timeout",children:"testOptions.actionTimeout"})," and ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-testoptions#test-options-navigation-timeout",children:"testOptions.navigationTimeout"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"set-timeout-for-a-single-action",children:"Set timeout for a single action"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test, expect } from '@playwright/test';\n\ntest('basic test', async ({ page }) => {\n  await page.goto('https://playwright.dev', { timeout: 30000 });\n  await page.getByText('Get Started').click({ timeout: 10000 });\n});\n"})}),"\n",(0,i.jsx)(t.h2,{id:"fixture-timeout",children:"Fixture timeout"}),"\n",(0,i.jsxs)(t.p,{children:["By default, ",(0,i.jsx)(t.a,{href:"./test-fixtures",children:"fixture"})," shares timeout with the test. However, for slow fixtures, especially ",(0,i.jsx)(t.a,{href:"./test-fixtures#worker-scoped-fixtures",children:"worker-scoped"})," ones, it is convenient to have a separate timeout. This way you can keep the overall test timeout small, and give the slow fixture more time."]}),"\n",(0,i.jsxs)(o.A,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],children:[(0,i.jsx)(l.A,{value:"ts",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import { test as base, expect } from '@playwright/test';\n\nconst test = base.extend<{ slowFixture: string }>({\n  slowFixture: [async ({}, use) => {\n    // ... perform a slow operation ...\n    await use('hello');\n  }, { timeout: 60000 }]\n});\n\ntest('example test', async ({ slowFixture }) => {\n  // ...\n});\n"})})}),(0,i.jsx)(l.A,{value:"js",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"const { test: base, expect } = require('@playwright/test');\n\nconst test = base.extend({\n  slowFixture: [async ({}, use) => {\n    // ... perform a slow operation ...\n    await use('hello');\n  }, { timeout: 60000 }]\n});\n\ntest('example test', async ({ slowFixture }) => {\n  // ...\n});\n"})})})]}),"\n",(0,i.jsxs)(t.p,{children:["API reference: ",(0,i.jsx)(t.a,{href:"/docs/next/api/class-test#test-extend",children:"test.extend()"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}}}]);
"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6903],{4505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=n(4848),s=n(8453),l=n(4235),a=n(8328);n(3078);const r={id:"intro",title:"Installation"},o=void 0,d={id:"intro",title:"Installation",description:"Introduction",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/python/docs/next/intro",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"intro",title:"Installation"},sidebar:"docs",next:{title:"Writing tests",permalink:"/python/docs/next/writing-tests"}},h={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Installing Playwright Pytest",id:"installing-playwright-pytest",level:2},{value:"Add Example Test",id:"add-example-test",level:2},{value:"Running the Example Test",id:"running-the-example-test",level:2},{value:"Updating Playwright",id:"updating-playwright",level:2},{value:"System requirements",id:"system-requirements",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"Playwright was created specifically to accommodate the needs of end-to-end testing. Playwright supports all modern rendering engines including Chromium, WebKit, and Firefox. Test on Windows, Linux, and macOS, locally or on CI, headless or headed with native mobile emulation."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"/python/docs/next/library",children:"Playwright library"})," can be used as a general purpose browser automation tool, providing a powerful set of APIs to automate web applications, for both sync and async Python."]}),"\n",(0,i.jsx)(t.p,{children:"This introduction describes the Playwright Pytest plugin, which is the recommended way to write end-to-end tests."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"You will learn"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/intro#installing-playwright-pytest",children:"How to install Playwright Pytest"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/intro#running-the-example-test",children:"How to run the example test"})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"installing-playwright-pytest",children:"Installing Playwright Pytest"}),"\n",(0,i.jsxs)(t.p,{children:["Playwright recommends using the official ",(0,i.jsx)(t.a,{href:"/python/docs/next/test-runners",children:"Playwright Pytest plugin"})," to write end-to-end tests. It provides context isolation, running it on multiple browser configurations out of the box."]}),"\n",(0,i.jsx)(t.p,{children:"Get started by installing Playwright and running the example test to see it in action."}),"\n",(0,i.jsxs)(l.A,{groupId:"package-managers",defaultValue:"pypi",values:[{label:"PyPI",value:"pypi"},{label:"Anaconda",value:"anaconda"}],children:[(0,i.jsxs)(a.A,{value:"pypi",children:[(0,i.jsxs)(t.p,{children:["Install the ",(0,i.jsx)(t.a,{href:"https://pypi.org/project/pytest-playwright/",children:"Pytest plugin"}),":"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pip install pytest-playwright\n"})})]}),(0,i.jsxs)(a.A,{value:"anaconda",children:[(0,i.jsxs)(t.p,{children:["Install the ",(0,i.jsx)(t.a,{href:"https://anaconda.org/Microsoft/pytest-playwright",children:"Pytest plugin"}),":"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"conda config --add channels conda-forge\nconda config --add channels microsoft\nconda install pytest-playwright\n"})})]})]}),"\n",(0,i.jsx)(t.p,{children:"Install the required browsers:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"playwright install\n"})}),"\n",(0,i.jsx)(t.h2,{id:"add-example-test",children:"Add Example Test"}),"\n",(0,i.jsxs)(t.p,{children:["Create a file that follows the ",(0,i.jsx)(t.code,{children:"test_"})," prefix convention, such as ",(0,i.jsx)(t.code,{children:"test_example.py"}),", inside the current working directory or in a sub-directory with the code below. Make sure your test name also follows the ",(0,i.jsx)(t.code,{children:"test_"})," prefix convention."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-py",metastring:'title="test_example.py"',children:'import re\nfrom playwright.sync_api import Page, expect\n\ndef test_has_title(page: Page):\n    page.goto("https://playwright.dev/")\n\n    # Expect a title "to contain" a substring.\n    expect(page).to_have_title(re.compile("Playwright"))\n\ndef test_get_started_link(page: Page):\n    page.goto("https://playwright.dev/")\n\n    # Click the get started link.\n    page.get_by_role("link", name="Get started").click()\n\n    # Expects page to have a heading with the name of Installation.\n    expect(page.get_by_role("heading", name="Installation")).to_be_visible()\n'})}),"\n",(0,i.jsx)(t.h2,{id:"running-the-example-test",children:"Running the Example Test"}),"\n",(0,i.jsxs)(t.p,{children:["By default tests will be run on chromium. This can be configured via the ",(0,i.jsx)(t.a,{href:"/python/docs/next/running-tests",children:"CLI options"}),". Tests are run in headless mode meaning no browser UI will open up when running the tests. Results of the tests and test logs will be shown in the terminal."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pytest\n"})}),"\n",(0,i.jsx)(t.h2,{id:"updating-playwright",children:"Updating Playwright"}),"\n",(0,i.jsx)(t.p,{children:"To update Playwright to the latest version run the following command:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pip install pytest-playwright playwright -U\n"})}),"\n",(0,i.jsx)(t.h2,{id:"system-requirements",children:"System requirements"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Python 3.8 or higher."}),"\n",(0,i.jsx)(t.li,{children:"Windows 10+, Windows Server 2016+ or Windows Subsystem for Linux (WSL)."}),"\n",(0,i.jsx)(t.li,{children:"macOS 13 Ventura, or macOS 14 Sonoma."}),"\n",(0,i.jsx)(t.li,{children:"Debian 11, Debian 12, Ubuntu 20.04 or Ubuntu 22.04, Ubuntu 24.04, on x86-64 and arm64 architecture."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"whats-next",children:"What's next"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/writing-tests",children:"Write tests using web first assertions, page fixtures and locators"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/running-tests",children:"Run single test, multiple tests, headed mode"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/codegen",children:"Generate tests with Codegen"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/python/docs/next/trace-viewer-intro",children:"See a trace of your tests"})}),"\n"]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);
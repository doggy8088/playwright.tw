"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[2769],{2915:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>h});var t=n(4848),a=n(8453),s=n(4235),i=n(8328);n(3078);const c={id:"input",title:"Actions"},o=void 0,r={id:"input",title:"Actions",description:"Introduction",source:"@site/docs/input.mdx",sourceDirName:".",slug:"/input",permalink:"/python/docs/next/input",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"input",title:"Actions"},sidebar:"docs",previous:{title:"Release notes",permalink:"/python/docs/next/release-notes"},next:{title:"Auto-waiting",permalink:"/python/docs/next/actionability"}},d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Text input",id:"text-input",level:2},{value:"Checkboxes and radio buttons",id:"checkboxes-and-radio-buttons",level:2},{value:"Select options",id:"select-options",level:2},{value:"Mouse click",id:"mouse-click",level:2},{value:"Forcing the click",id:"forcing-the-click",level:4},{value:"Programmatic click",id:"programmatic-click",level:4},{value:"Type characters",id:"type-characters",level:2},{value:"Keys and shortcuts",id:"keys-and-shortcuts",level:2},{value:"Upload files",id:"upload-files",level:2},{value:"Focus element",id:"focus-element",level:2},{value:"Drag and Drop",id:"drag-and-drop",level:2},{value:"Dragging manually",id:"dragging-manually",level:3},{value:"Scrolling",id:"scrolling",level:2}];function p(e){const l={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(l.p,{children:"Playwright can interact with HTML Input elements such as text inputs, checkboxes, radio buttons, select options, mouse clicks, type characters, keys and shortcuts as well as upload files and focus elements."}),"\n",(0,t.jsx)(l.h2,{id:"text-input",children:"Text input"}),"\n",(0,t.jsxs)(l.p,{children:["Using ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-fill",children:"locator.fill()"})," is the easiest way to fill out the form fields. It focuses the element and triggers an ",(0,t.jsx)(l.code,{children:"input"})," event with the entered text. It works for ",(0,t.jsx)(l.code,{children:"<input>"}),", ",(0,t.jsx)(l.code,{children:"<textarea>"})," and ",(0,t.jsx)(l.code,{children:"[contenteditable]"})," elements."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Text input\npage.get_by_role("textbox").fill("Peter")\n\n# Date input\npage.get_by_label("Birth date").fill("2020-02-02")\n\n# Time input\npage.get_by_label("Appointment time").fill("13:15")\n\n# Local datetime input\npage.get_by_label("Local time").fill("2020-03-02T05:15")\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Text input\nawait page.get_by_role("textbox").fill("Peter")\n\n# Date input\nawait page.get_by_label("Birth date").fill("2020-02-02")\n\n# Time input\nawait page.get_by_label("Appointment time").fill("13:15")\n\n# Local datetime input\nawait page.get_by_label("Local time").fill("2020-03-02T05:15")\n'})})})]}),"\n",(0,t.jsx)(l.h2,{id:"checkboxes-and-radio-buttons",children:"Checkboxes and radio buttons"}),"\n",(0,t.jsxs)(l.p,{children:["Using ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-set-checked",children:"locator.set_checked()"})," is the easiest way to check and uncheck a checkbox or a radio button. This method can be used with ",(0,t.jsx)(l.code,{children:"input[type=checkbox]"}),", ",(0,t.jsx)(l.code,{children:"input[type=radio]"})," and ",(0,t.jsx)(l.code,{children:"[role=checkbox]"})," elements."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Check the checkbox\npage.get_by_label('I agree to the terms above').check()\n\n# Assert the checked state\nexpect(page.get_by_label('Subscribe to newsletter')).to_be_checked()\n\n# Select the radio button\npage.get_by_label('XL').check()\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Check the checkbox\nawait page.get_by_label('I agree to the terms above').check()\n\n# Assert the checked state\nawait expect(page.get_by_label('Subscribe to newsletter')).to_be_checked()\n\n# Select the radio button\nawait page.get_by_label('XL').check()\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"select-options",children:"Select options"}),"\n",(0,t.jsxs)(l.p,{children:["Selects one or multiple options in the ",(0,t.jsx)(l.code,{children:"<select>"})," element with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-select-option",children:"locator.select_option()"}),". You can specify option ",(0,t.jsx)(l.code,{children:"value"}),", or ",(0,t.jsx)(l.code,{children:"label"})," to select. Multiple options can be selected."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Single selection matching the value or label\npage.get_by_label('Choose a color').select_option('blue')\n\n# Single selection matching the label\npage.get_by_label('Choose a color').select_option(label='Blue')\n\n# Multiple selected items\npage.get_by_label('Choose multiple colors').select_option(['red', 'green', 'blue'])\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Single selection matching the value or label\nawait page.get_by_label('Choose a color').select_option('blue')\n\n# Single selection matching the label\nawait page.get_by_label('Choose a color').select_option(label='Blue')\n\n# Multiple selected items\nawait page.get_by_label('Choose multiple colors').select_option(['red', 'green', 'blue'])\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"mouse-click",children:"Mouse click"}),"\n",(0,t.jsx)(l.p,{children:"Performs a simple human click."}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Generic click\npage.get_by_role("button").click()\n\n# Double click\npage.get_by_text("Item").dblclick()\n\n# Right click\npage.get_by_text("Item").click(button="right")\n\n# Shift + click\npage.get_by_text("Item").click(modifiers=["Shift"])\n\n# Hover over element\npage.get_by_text("Item").hover()\n\n# Click the top left corner\npage.get_by_text("Item").click(position={ "x": 0, "y": 0})\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Generic click\nawait page.get_by_role("button").click()\n\n# Double click\nawait page.get_by_text("Item").dblclick()\n\n# Right click\nawait page.get_by_text("Item").click(button="right")\n\n# Shift + click\nawait page.get_by_text("Item").click(modifiers=["Shift"])\n\n# Ctrl + click or Windows and Linux\n# Meta + click on macOS\nawait page.get_by_text("Item").click(modifiers=["ControlOrMeta"])\n\n# Hover over element\nawait page.get_by_text("Item").hover()\n\n# Click the top left corner\nawait page.get_by_text("Item").click(position={ "x": 0, "y": 0})\n'})})})]}),"\n",(0,t.jsx)(l.p,{children:"Under the hood, this and other pointer-related methods:"}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsx)(l.li,{children:"wait for element with given selector to be in DOM"}),"\n",(0,t.jsxs)(l.li,{children:["wait for it to become displayed, i.e. not empty, no ",(0,t.jsx)(l.code,{children:"display:none"}),", no ",(0,t.jsx)(l.code,{children:"visibility:hidden"})]}),"\n",(0,t.jsx)(l.li,{children:"wait for it to stop moving, for example, until css transition finishes"}),"\n",(0,t.jsx)(l.li,{children:"scroll the element into view"}),"\n",(0,t.jsx)(l.li,{children:"wait for it to receive pointer events at the action point, for example, waits until element becomes non-obscured by other elements"}),"\n",(0,t.jsx)(l.li,{children:"retry if the element is detached during any of the above checks"}),"\n"]}),"\n",(0,t.jsx)(l.h4,{id:"forcing-the-click",children:"Forcing the click"}),"\n",(0,t.jsxs)(l.p,{children:["Sometimes, apps use non-trivial logic where hovering the element overlays it with another element that intercepts the click. This behavior is indistinguishable from a bug where element gets covered and the click is dispatched elsewhere. If you know this is taking place, you can bypass the ",(0,t.jsx)(l.a,{href:"/python/docs/next/actionability",children:"actionability"})," checks and force the click:"]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'page.get_by_role("button").click(force=True)\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'await page.get_by_role("button").click(force=True)\n'})})})]}),"\n",(0,t.jsx)(l.h4,{id:"programmatic-click",children:"Programmatic click"}),"\n",(0,t.jsxs)(l.p,{children:["If you are not interested in testing your app under the real conditions and want to simulate the click by any means possible, you can trigger the ",(0,t.jsx)(l.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click",children:(0,t.jsx)(l.code,{children:"HTMLElement.click()"})})," behavior via simply dispatching a click event on the element with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-dispatch-event",children:"locator.dispatch_event()"}),":"]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"page.get_by_role(\"button\").dispatch_event('click')\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"await page.get_by_role(\"button\").dispatch_event('click')\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"type-characters",children:"Type characters"}),"\n",(0,t.jsx)(l.admonition,{type:"caution",children:(0,t.jsxs)(l.p,{children:["Most of the time, you should input text with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-fill",children:"locator.fill()"}),". See the ",(0,t.jsx)(l.a,{href:"#text-input",children:"Text input"})," section above. You only need to type characters if there is special keyboard handling on the page."]})}),"\n",(0,t.jsxs)(l.p,{children:["Type into the field character by character, as if it was a user with a real keyboard with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-press-sequentially",children:"locator.press_sequentially()"}),"."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Press keys one by one\npage.locator('#area').press_sequentially('Hello World!')\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# Press keys one by one\nawait page.locator('#area').press_sequentially('Hello World!')\n"})})})]}),"\n",(0,t.jsxs)(l.p,{children:["This method will emit all the necessary keyboard events, with all the ",(0,t.jsx)(l.code,{children:"keydown"}),", ",(0,t.jsx)(l.code,{children:"keyup"}),", ",(0,t.jsx)(l.code,{children:"keypress"})," events in place. You can even specify the optional ",(0,t.jsx)(l.code,{children:"delay"})," between the key presses to simulate real user behavior."]}),"\n",(0,t.jsx)(l.h2,{id:"keys-and-shortcuts",children:"Keys and shortcuts"}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Hit Enter\npage.get_by_text("Submit").press("Enter")\n\n# Dispatch Control+Right\npage.get_by_role("textbox").press("Control+ArrowRight")\n\n# Press $ sign on keyboard\npage.get_by_role("textbox").press("$")\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Hit Enter\nawait page.get_by_text("Submit").press("Enter")\n\n# Dispatch Control+Right\nawait page.get_by_role("textbox").press("Control+ArrowRight")\n\n# Press $ sign on keyboard\nawait page.get_by_role("textbox").press("$")\n'})})})]}),"\n",(0,t.jsxs)(l.p,{children:["The ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-press",children:"locator.press()"})," method focuses the selected element and produces a single keystroke. It accepts the logical key names that are emitted in the ",(0,t.jsx)(l.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",children:"keyboardEvent.key"})," property of the keyboard events:"]}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-txt",children:"Backquote, Minus, Equal, Backslash, Backspace, Tab, Delete, Escape,\nArrowDown, End, Enter, Home, Insert, PageDown, PageUp, ArrowRight,\nArrowUp, F1 - F12, Digit0 - Digit9, KeyA - KeyZ, etc.\n"})}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsxs)(l.li,{children:["You can alternatively specify a single character you'd like to produce such as ",(0,t.jsx)(l.code,{children:'"a"'})," or ",(0,t.jsx)(l.code,{children:'"#"'}),"."]}),"\n",(0,t.jsxs)(l.li,{children:["Following modification shortcuts are also supported: ",(0,t.jsx)(l.code,{children:"Shift, Control, Alt, Meta"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(l.p,{children:["Simple version produces a single character. This character is case-sensitive, so ",(0,t.jsx)(l.code,{children:'"a"'})," and ",(0,t.jsx)(l.code,{children:'"A"'})," will produce different results."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# <input id=name>\npage.locator('#name').press('Shift+A')\n\n# <input id=name>\npage.locator('#name').press('Shift+ArrowLeft')\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"# <input id=name>\nawait page.locator('#name').press('Shift+A')\n\n# <input id=name>\nawait page.locator('#name').press('Shift+ArrowLeft')\n"})})})]}),"\n",(0,t.jsxs)(l.p,{children:["Shortcuts such as ",(0,t.jsx)(l.code,{children:'"Control+o"'})," or ",(0,t.jsx)(l.code,{children:'"Control+Shift+T"'})," are supported as well. When specified with the modifier, modifier is pressed and being held while the subsequent key is being pressed."]}),"\n",(0,t.jsxs)(l.p,{children:["Note that you still need to specify the capital ",(0,t.jsx)(l.code,{children:"A"})," in ",(0,t.jsx)(l.code,{children:"Shift-A"})," to produce the capital character. ",(0,t.jsx)(l.code,{children:"Shift-a"})," produces a lower-case one as if you had the ",(0,t.jsx)(l.code,{children:"CapsLock"})," toggled."]}),"\n",(0,t.jsx)(l.h2,{id:"upload-files",children:"Upload files"}),"\n",(0,t.jsxs)(l.p,{children:["You can select input files for upload using the ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-set-input-files",children:"locator.set_input_files()"})," method. It expects first argument to point to an ",(0,t.jsx)(l.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",children:"input element"})," with the type ",(0,t.jsx)(l.code,{children:'"file"'}),". Multiple files can be passed in the array. If some of the file paths are relative, they are resolved relative to the current working directory. Empty array clears the selected files."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Select one file\npage.get_by_label("Upload file").set_input_files(\'myfile.pdf\')\n\n# Select multiple files\npage.get_by_label("Upload files").set_input_files([\'file1.txt\', \'file2.txt\'])\n\n# Select a directory\npage.get_by_label("Upload directory").set_input_files(\'mydir\')\n\n# Remove all the selected files\npage.get_by_label("Upload file").set_input_files([])\n\n# Upload buffer from memory\npage.get_by_label("Upload file").set_input_files(\n    files=[\n        {"name": "test.txt", "mimeType": "text/plain", "buffer": b"this is a test"}\n    ],\n)\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Select one file\nawait page.get_by_label("Upload file").set_input_files(\'myfile.pdf\')\n\n# Select multiple files\nawait page.get_by_label("Upload files").set_input_files([\'file1.txt\', \'file2.txt\'])\n\n# Select a directory\nawait page.get_by_label("Upload directory").set_input_files(\'mydir\')\n\n# Remove all the selected files\nawait page.get_by_label("Upload file").set_input_files([])\n\n# Upload buffer from memory\nawait page.get_by_label("Upload file").set_input_files(\n    files=[\n        {"name": "test.txt", "mimeType": "text/plain", "buffer": b"this is a test"}\n    ],\n)\n'})})})]}),"\n",(0,t.jsxs)(l.p,{children:["If you don't have input element in hand (it is created dynamically), you can handle the ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-page#page-event-file-chooser",children:'page.on("filechooser")'})," event or use a corresponding waiting method upon your action:"]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'with page.expect_file_chooser() as fc_info:\n    page.get_by_label("Upload file").click()\nfile_chooser = fc_info.value\nfile_chooser.set_files("myfile.pdf")\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'async with page.expect_file_chooser() as fc_info:\n    await page.get_by_label("Upload file").click()\nfile_chooser = await fc_info.value\nawait file_chooser.set_files("myfile.pdf")\n'})})})]}),"\n",(0,t.jsx)(l.h2,{id:"focus-element",children:"Focus element"}),"\n",(0,t.jsxs)(l.p,{children:["For the dynamic pages that handle focus events, you can focus the given element with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-focus",children:"locator.focus()"}),"."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"page.get_by_label('password').focus()\n"})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:"await page.get_by_label('password').focus()\n"})})})]}),"\n",(0,t.jsx)(l.h2,{id:"drag-and-drop",children:"Drag and Drop"}),"\n",(0,t.jsxs)(l.p,{children:["You can perform drag&drop operation with ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-drag-to",children:"locator.drag_to()"}),". This method will:"]}),"\n",(0,t.jsxs)(l.ul,{children:["\n",(0,t.jsx)(l.li,{children:"Hover the element that will be dragged."}),"\n",(0,t.jsx)(l.li,{children:"Press left mouse button."}),"\n",(0,t.jsx)(l.li,{children:"Move mouse to the element that will receive the drop."}),"\n",(0,t.jsx)(l.li,{children:"Release left mouse button."}),"\n"]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'page.locator("#item-to-be-dragged").drag_to(page.locator("#item-to-drop-at"))\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'await page.locator("#item-to-be-dragged").drag_to(page.locator("#item-to-drop-at"))\n'})})})]}),"\n",(0,t.jsx)(l.h3,{id:"dragging-manually",children:"Dragging manually"}),"\n",(0,t.jsxs)(l.p,{children:["If you want precise control over the drag operation, use lower-level methods like ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-hover",children:"locator.hover()"}),", ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-mouse#mouse-down",children:"mouse.down()"}),", ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-mouse#mouse-move",children:"mouse.move()"})," and ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-mouse#mouse-up",children:"mouse.up()"}),"."]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'page.locator("#item-to-be-dragged").hover()\npage.mouse.down()\npage.locator("#item-to-drop-at").hover()\npage.mouse.up()\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'await page.locator("#item-to-be-dragged").hover()\nawait page.mouse.down()\nawait page.locator("#item-to-drop-at").hover()\nawait page.mouse.up()\n'})})})]}),"\n",(0,t.jsx)(l.admonition,{type:"note",children:(0,t.jsxs)(l.p,{children:["If your page relies on the ",(0,t.jsx)(l.code,{children:"dragover"})," event being dispatched, you need at least two mouse moves to trigger it in all browsers. To reliably issue the second mouse move, repeat your ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-mouse#mouse-move",children:"mouse.move()"})," or ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-hover",children:"locator.hover()"})," twice. The sequence of operations would be: hover the drag element, mouse down, hover the drop element, hover the drop element second time, mouse up."]})}),"\n",(0,t.jsx)(l.h2,{id:"scrolling",children:"Scrolling"}),"\n",(0,t.jsx)(l.p,{children:"Most of the time, Playwright will automatically scroll for you before doing any actions. Therefore, you do not need to scroll explicitly."}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Scrolls automatically so that button is visible\npage.get_by_role("button").click()\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Scrolls automatically so that button is visible\nawait page.get_by_role("button").click()\n'})})})]}),"\n",(0,t.jsx)(l.p,{children:'However, in rare cases you might need to manually scroll. For example, you might want to force an "infinite list" to load more elements, or position the page for a specific screenshot. In such a case, the most reliable way is to find an element that you want to make visible at the bottom, and scroll it into view.'}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Scroll the footer into view, forcing an "infinite list" to load more content\npage.get_by_text("Footer text").scroll_into_view_if_needed()\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Scroll the footer into view, forcing an "infinite list" to load more content\nawait page.get_by_text("Footer text").scroll_into_view_if_needed()\n'})})})]}),"\n",(0,t.jsxs)(l.p,{children:["If you would like to control the scrolling more precisely, use ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-mouse#mouse-wheel",children:"mouse.wheel()"})," or ",(0,t.jsx)(l.a,{href:"/python/docs/next/api/class-locator#locator-evaluate",children:"locator.evaluate()"}),":"]}),"\n",(0,t.jsxs)(s.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,t.jsx)(i.A,{value:"sync",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Position the mouse and scroll with the mouse wheel\npage.get_by_test_id("scrolling-container").hover()\npage.mouse.wheel(0, 10)\n\n# Alternatively, programmatically scroll a specific element\npage.get_by_test_id("scrolling-container").evaluate("e => e.scrollTop += 100")\n'})})}),(0,t.jsx)(i.A,{value:"async",children:(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-py",children:'# Position the mouse and scroll with the mouse wheel\nawait page.get_by_test_id("scrolling-container").hover()\nawait page.mouse.wheel(0, 10)\n\n# Alternatively, programmatically scroll a specific element\nawait page.get_by_test_id("scrolling-container").evaluate("e => e.scrollTop += 100")\n'})})})]})]})}function u(e={}){const{wrapper:l}={...(0,a.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);
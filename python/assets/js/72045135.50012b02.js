"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[4174],{111:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=s(4848),r=s(8453),i=s(4235),l=s(8328);s(3078);const o={id:"class-selectors",title:"Selectors"},a=void 0,c={id:"api/class-selectors",title:"Selectors",description:"Selectors can be used to install custom selector engines. See extensibility for more information.",source:"@site/docs/api/class-selectors.mdx",sourceDirName:"api",slug:"/api/class-selectors",permalink:"/python/docs/next/api/class-selectors",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"class-selectors",title:"Selectors"},sidebar:"api",previous:{title:"Route",permalink:"/python/docs/next/api/class-route"},next:{title:"TimeoutError",permalink:"/python/docs/next/api/class-timeouterror"}},h={},d=[{value:"Methods",id:"methods",level:2},{value:"register",id:"selectors-register",level:3},{value:"set_test_id_attribute",id:"selectors-set-test-id-attribute",level:3}];function p(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Selectors can be used to install custom selector engines. See ",(0,n.jsx)(t.a,{href:"/python/docs/next/extensibility",children:"extensibility"})," for more information."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"selectors-register",children:"register"}),"\n",(0,n.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added before v1.9"}),"\n",(0,n.jsx)("x-search",{children:"selectors.register"}),"\n",(0,n.jsx)(t.p,{children:"Selectors must be registered before creating the page."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Usage"})}),"\n",(0,n.jsx)(t.p,{children:"An example of registering selector engine that queries elements based on a tag name:"}),"\n",(0,n.jsxs)(i.A,{groupId:"python-flavor",defaultValue:"sync",values:[{label:"Sync",value:"sync"},{label:"Async",value:"async"}],children:[(0,n.jsx)(l.A,{value:"sync",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"from playwright.sync_api import sync_playwright, Playwright\n\ndef run(playwright: Playwright):\n    tag_selector = \"\"\"\n      {\n          // Returns the first element matching given selector in the root's subtree.\n          query(root, selector) {\n              return root.querySelector(selector);\n          },\n          // Returns all elements matching given selector in the root's subtree.\n          queryAll(root, selector) {\n              return Array.from(root.querySelectorAll(selector));\n          }\n      }\"\"\"\n\n    # Register the engine. Selectors will be prefixed with \"tag=\".\n    playwright.selectors.register(\"tag\", tag_selector)\n    browser = playwright.chromium.launch()\n    page = browser.new_page()\n    page.set_content('<div><button>Click me</button></div>')\n\n    # Use the selector prefixed with its name.\n    button = page.locator('tag=button')\n    # Combine it with built-in locators.\n    page.locator('tag=div').get_by_text('Click me').click()\n    # Can use it in any methods supporting selectors.\n    button_count = page.locator('tag=button').count()\n    print(button_count)\n    browser.close()\n\nwith sync_playwright() as playwright:\n    run(playwright)\n"})})}),(0,n.jsx)(l.A,{value:"async",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"import asyncio\nfrom playwright.async_api import async_playwright, Playwright\n\nasync def run(playwright: Playwright):\n    tag_selector = \"\"\"\n      {\n          // Returns the first element matching given selector in the root's subtree.\n          query(root, selector) {\n              return root.querySelector(selector);\n          },\n          // Returns all elements matching given selector in the root's subtree.\n          queryAll(root, selector) {\n              return Array.from(root.querySelectorAll(selector));\n          }\n      }\"\"\"\n\n    # Register the engine. Selectors will be prefixed with \"tag=\".\n    await playwright.selectors.register(\"tag\", tag_selector)\n    browser = await playwright.chromium.launch()\n    page = await browser.new_page()\n    await page.set_content('<div><button>Click me</button></div>')\n\n    # Use the selector prefixed with its name.\n    button = await page.query_selector('tag=button')\n    # Combine it with built-in locators.\n    await page.locator('tag=div').get_by_text('Click me').click()\n    # Can use it in any methods supporting selectors.\n    button_count = await page.locator('tag=button').count()\n    print(button_count)\n    await browser.close()\n\nasync def main():\n    async with async_playwright() as playwright:\n        await run(playwright)\n\nasyncio.run(main())\n"})})})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Arguments"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"name"})," ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str",children:"str"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-register-option-name"}),(0,n.jsx)("a",{href:"#selectors-register-option-name",class:"list-anchor",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["Name that is used in selectors as a prefix, e.g. ",(0,n.jsx)(t.code,{children:"{name: 'foo'}"})," enables ",(0,n.jsx)(t.code,{children:"foo=myselectorbody"})," selectors. May only contain ",(0,n.jsx)(t.code,{children:"[a-zA-Z0-9_]"})," characters."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"script"})," ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str",children:"str"})," ",(0,n.jsx)(t.em,{children:"(optional)"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-register-option-script"}),(0,n.jsx)("a",{href:"#selectors-register-option-script",class:"list-anchor",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"Raw script content."}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"content_script"})," ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/stdtypes.html",title:"bool",children:"bool"})," ",(0,n.jsx)(t.em,{children:"(optional)"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-register-option-content-script"}),(0,n.jsx)("a",{href:"#selectors-register-option-content-script",class:"list-anchor",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["Whether to run this selector engine in isolated JavaScript environment. This environment has access to the same DOM, but not any JavaScript objects from the frame's scripts. Defaults to ",(0,n.jsx)(t.code,{children:"false"}),". Note that running as a content script is not guaranteed when this engine is used together with other registered engines."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"path"})," ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/typing.html#typing.Union",title:"Union",children:"Union"}),"[",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str",children:"str"}),", ",(0,n.jsx)(t.a,{href:"https://realpython.com/python-pathlib/",title:"pathlib.Path",children:"pathlib.Path"}),"] ",(0,n.jsx)(t.em,{children:"(optional)"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-register-option-path"}),(0,n.jsx)("a",{href:"#selectors-register-option-path",class:"list-anchor",children:"#"})]}),"\n",(0,n.jsxs)(t.p,{children:["Path to the JavaScript file. If ",(0,n.jsx)(t.code,{children:"path"})," is a relative path, then it is resolved relative to the current working directory."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Returns"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/constants.html#None",title:"None",children:"NoneType"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-register-return"}),(0,n.jsx)("a",{href:"#selectors-register-return",class:"list-anchor",children:"#"})]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"selectors-set-test-id-attribute",children:"set_test_id_attribute"}),"\n",(0,n.jsx)("font",{size:"2",style:{position:"relative",top:"-20px"},children:"Added in: v1.27"}),"\n",(0,n.jsx)("x-search",{children:"selectors.set_test_id_attribute"}),"\n",(0,n.jsxs)(t.p,{children:["Defines custom attribute name to be used in ",(0,n.jsx)(t.a,{href:"/python/docs/next/api/class-page#page-get-by-test-id",children:"page.get_by_test_id()"}),". ",(0,n.jsx)(t.code,{children:"data-testid"})," is used by default."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Usage"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"selectors.set_test_id_attribute(attribute_name)\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Arguments"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"attribute_name"})," ",(0,n.jsx)(t.a,{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str",children:"str"}),(0,n.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",class:"list-anchor-link",id:"selectors-set-test-id-attribute-option-attribute-name"}),(0,n.jsx)("a",{href:"#selectors-set-test-id-attribute-option-attribute-name",class:"list-anchor",children:"#"})]}),"\n",(0,n.jsx)(t.p,{children:"Test id attribute name."}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);